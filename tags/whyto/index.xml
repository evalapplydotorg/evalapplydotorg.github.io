<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>whyto on eval/apply</title><link>/tags/whyto/</link><description>Recent content in whyto on eval/apply</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 29 Apr 2022 12:56:25 +0530</lastBuildDate><atom:link href="/tags/whyto/index.xml" rel="self" type="application/rss+xml"/><item><title>Which Clojure codebases should I read? How and why?</title><link>/posts/which-clojure-codebases-to-read-how-and-why/</link><pubDate>Fri, 29 Apr 2022 12:56:25 +0530</pubDate><guid>/posts/which-clojure-codebases-to-read-how-and-why/</guid><description>&lt;p>Newcomers to Clojure so frequently ask this question that an FAQ/Guide is
being discussed, to add to the Clojure website. See Issue #586:
&lt;a href="https://github.com/clojure/clojure-site/issues/586">Add FAQ or guide for example projects&lt;/a>.
Please add your thoughts to that ticket!&lt;/p>
&lt;p>This post is my (opinionated) take on it. I struggled a lot with this too.
I still do from time to time, in unfamiliar territory, and these days I feel
like I&amp;rsquo;m in unfamiliar territory a lot. Various Clojurians &amp;mdash; individuals and
groups &amp;mdash; have been producing so much creative, diverse work over these last
few years that keeping up quickly became impossible!&lt;/p>
&lt;p>No doubt this surfeit of creativity intimidates newcomers. The strange ideas,
lingo, thinking, and writing espoused by Clojurians can seem so very alien.
But despair not, for Clojureland also has a surfeit of friendly, helpful people.
And very many of our codebases are small! You will be able to read them! And
get help if you get stuck!&lt;/p>
&lt;p>This post explains what I believe I&amp;rsquo;ve done subconsciously over the years. It
is as much an answer for somewhat experienced me as it is for the relative
newcomer you!&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#a-quick-motivating-example">A quick motivating example&lt;/a>&lt;/li>
&lt;li>&lt;a href="#heuristics-to-choose-a-project-to-read">Heuristics to choose a project to read&lt;/a>&lt;/li>
&lt;li>&lt;a href="#effective-way--s--to-read-a-project">Effective way(s) to read a project&lt;/a>&lt;/li>
&lt;li>&lt;a href="#suggested-projects-with-short-reasons-why-to-read">Suggested projects with short reasons why to read&lt;/a>&lt;/li>
&lt;li>&lt;a href="#library-maintainers-would-howtoreadmes-make-sense">Library maintainers: Would HOWTOREADMEs make sense?&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted --></description><content>&lt;p>Newcomers to Clojure so frequently ask this question that an FAQ/Guide is
being discussed, to add to the Clojure website. See Issue #586:
&lt;a href="https://github.com/clojure/clojure-site/issues/586">Add FAQ or guide for example projects&lt;/a>.
Please add your thoughts to that ticket!&lt;/p>
&lt;p>This post is my (opinionated) take on it. I struggled a lot with this too.
I still do from time to time, in unfamiliar territory, and these days I feel
like I&amp;rsquo;m in unfamiliar territory a lot. Various Clojurians &amp;mdash; individuals and
groups &amp;mdash; have been producing so much creative, diverse work over these last
few years that keeping up quickly became impossible!&lt;/p>
&lt;p>No doubt this surfeit of creativity intimidates newcomers. The strange ideas,
lingo, thinking, and writing espoused by Clojurians can seem so very alien.
But despair not, for Clojureland also has a surfeit of friendly, helpful people.
And very many of our codebases are small! You will be able to read them! And
get help if you get stuck!&lt;/p>
&lt;p>This post explains what I believe I&amp;rsquo;ve done subconsciously over the years. It
is as much an answer for somewhat experienced me as it is for the relative
newcomer you!&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#a-quick-motivating-example">A quick motivating example&lt;/a>&lt;/li>
&lt;li>&lt;a href="#heuristics-to-choose-a-project-to-read">Heuristics to choose a project to read&lt;/a>&lt;/li>
&lt;li>&lt;a href="#effective-way--s--to-read-a-project">Effective way(s) to read a project&lt;/a>&lt;/li>
&lt;li>&lt;a href="#suggested-projects-with-short-reasons-why-to-read">Suggested projects with short reasons why to read&lt;/a>&lt;/li>
&lt;li>&lt;a href="#library-maintainers-would-howtoreadmes-make-sense">Library maintainers: Would HOWTOREADMEs make sense?&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;hr>
&lt;h2 id="a-quick-motivating-example">A quick motivating example&lt;/h2>
&lt;p>I haven&amp;rsquo;t done much focused code reading recently, but semi-recently, I went
down the rabbit hole of comparing &amp;ldquo;System&amp;rdquo; libraries. The details are for a
separate blog post. I&amp;rsquo;ve placed it here as reference material to illustrate
some of this post.&lt;/p>
&lt;p>&lt;a href="https://github.com/adityaathalye/slideware/raw/master/Grokking%20Libraries%20in%20Clojureland.pdf">Grokking Libraries in Clojureland&lt;/a> (PDF, slides).&lt;/p>
&lt;h2 id="heuristics-to-choose-a-project-to-read">Heuristics to choose a project to read&lt;/h2>
&lt;p>This kind of code reading is best viewed as applied, directed reading designed
to deeply understand creative (and destructive) ways to use an instrument,
in this case, Clojure the language, its standard library, idioms, patterns,
and style.&lt;/p>
&lt;p>The key problem here is &amp;ldquo;you don&amp;rsquo;t know what you don&amp;rsquo;t know&amp;rdquo;. Coming up with
a set of heuristics can help discover good choices. In fact, one can make a
decision-making matrix of #{libraries} X #{heuristics}, like so:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Heuristic / Library&lt;/th>
&lt;th>Lib A&lt;/th>
&lt;th>Lib B&lt;/th>
&lt;th>Lib C&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Code size (LoC)&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Code complexity (high/mid/low)&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Utility&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stability (high, mid, low)&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Docs&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Talks&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tutorials&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;hellip;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>It also helps to decide a domain or area of knowledge (web/HTML, web/HTTP,
algorave, databases etc.), before drawing up the decision-making matrix.&lt;/p>
&lt;p>Here is a set of opinions and heuristics to steal and/or riff off.&lt;/p>
&lt;h3 id="choosing-an-area-of-domain-knowledge">Choosing an area of domain knowledge&lt;/h3>
&lt;p>Knowledge about a domain or problem space is a source of massive cognitive
overhead. It helps a lot to pick an area of knowledge you feel you are most
comfortable with, and narrow your code search and reading to that area.&lt;/p>
&lt;p>For example, web programmers may want to read an HTTP library. Musicians may
want to find a music synthesis codebase. Frontend people many like to read
HTML / CSS parsers or generators. Database nerds may want to know how we do
stuff without fancy ORMs etc.&lt;/p>
&lt;h3 id="project-type">Project type&lt;/h3>
&lt;p>Choose single-purpose libraries. The Clojure world is full of libraries of
various sizes and responsibilities. Most of these tend to focus very sharply
on one single problem, which makes it easier to build and retain complete
context in one&amp;rsquo;s head. These tend to be good place to start.&lt;/p>
&lt;p>Application code, by contrast, tends to be a complex (or complected) mix
of domains, patterns, libraries. This makes it easy to get lost.&lt;/p>
&lt;p>Further, there is no one true way to organise Clojure apps. Often, apps
don&amp;rsquo;t even mirror standard conventions seen elsewhere (e.g. MVC/MVCC etc.).
Clojure apps are assemblies of libraries, where each library choice comes
with some technical and/or design tradeoff. Further, build tools vary. App
configuration systems vary. etc. etc. many tens of moving parts.&lt;/p>
&lt;p>One eventually develops a sense for it all, but most of it is completely not
obvious when one is just starting off. It makes way-finding really hard.
You will spend lots of time just to figure out how some app is wired together.&lt;/p>
&lt;p>So it&amp;rsquo;s better to subtract everything until you are left with a singular
idea and its expression. That is, often, a single-purpose library!&lt;/p>
&lt;h3 id="code-size">Code size&lt;/h3>
&lt;p>Prefer libraries with as few lines of code as possible. The good news is
that Clojure libraries tend to focus on a single well-defined problem,
which tends to result in small &lt;em>and complete&lt;/em> solutions to problems. Many
excellent Clojure libraries weigh in at under 1,000 LoC.&lt;/p>
&lt;p>With some effort, you can hope to hold the entire codebase in your head.
Once that happens, your brain will discover things in diffuse mode in your
shower or on a walk or something. And then you know you&amp;rsquo;ve struck gold!&lt;/p>
&lt;h3 id="code-complexity">Code complexity&lt;/h3>
&lt;p>Even if a library is small, it may be complex, because it address a hard
problem. This is tricky to infer up-front, and that&amp;rsquo;s fine. Getting stuck is
part of the process. One mitigation is to skim-read the source first. If you
see very deeply indented code, or lots of large functions, or lots of macros,
maybe park it for later. Definitely prefer libraries without advanced macrology
(unless your purpose is to understand advanced macrology :).&lt;/p>
&lt;h3 id="utility">Utility&lt;/h3>
&lt;p>How much is the library used? A well-used library may be widely used, or it
may be niche but heavily used. Either way, odds are good that the source has
been vetted. Also it improves your chances of finding help if you get stuck.&lt;/p>
&lt;p>Some proxy measures like github stars, a dedicated channel in Slack or Zulip,
or references in mailing list history can help judge this. If you are still
uncertain, just drop a message in one of the community forums. Helpful people
will help!&lt;/p>
&lt;h3 id="talks-docs-tutorials">Talks, docs, tutorials&lt;/h3>
&lt;p>Are talks, docs, and tutorials available for the library, or at least the space
the library addresses? The code often does not tell the full story of the
&amp;ldquo;why?&amp;rdquo; of the library, the roads not taken or choices unmade. Code also tends
not to convey the author&amp;rsquo;s mental process. This is the highest value learning
that comes from reading; viz. learning a new way to think. So knowing what
knowledgeable people have been saying about the space/code is very useful.&lt;/p>
&lt;h3 id="beware-the-falsehood-of-dead-repos">Beware the falsehood of &amp;ldquo;dead&amp;rdquo; repos&lt;/h3>
&lt;p>Many in-use Clojure libraries don&amp;rsquo;t see frequent (or large) updates. This is
a virtue in our circles. It indicates finished-ness and stability. In fact, if
you find a repo with no commits for months or years, and a &amp;ldquo;liveness advisory&amp;rdquo;
on it, you &lt;em>definitely&lt;/em> want to read that code. That code has proven itself
handsomely!&lt;/p>
&lt;h2 id="effective-way--s--to-read-a-project">Effective way(s) to read a project&lt;/h2>
&lt;p>This is basically a set of ways to &lt;em>engage&lt;/em> with the material. The programmer
equivalent of textbook underlining, marginalia, scribbling notes and diagrams.&lt;/p>
&lt;h3 id="read-the-readme-and-api-docs">Read the README and API docs&lt;/h3>
&lt;p>And keep them handy. Ideally figure out the &lt;em>why&lt;/em> of the project before getting
into the weeds, because weeds there will be.&lt;/p>
&lt;h3 id="use-the-repl">Use the REPL&lt;/h3>
&lt;p>I habitually use &lt;code>clojure.repl/source&lt;/code>, to pull up source code for functions
that are new to me.&lt;/p>
&lt;h3 id="learn-to-navigate-the-code">Learn to navigate the code&lt;/h3>
&lt;p>Find editor functions that let you see an overview of a namespace, jump to
and fro from definitions.&lt;/p>
&lt;h3 id="experiment">&lt;em>Experiment&lt;/em>&lt;/h3>
&lt;p>IMHO it is critical to &lt;em>experiment&lt;/em> with the code. Passive reading gets us
only so far. To truly grok code one must modify and play with it! This is
where one thanks oneself for choosing a focused, concise project :)&lt;/p>
&lt;h3 id="comparitive-literature-approach">&amp;ldquo;Comparitive Literature&amp;rdquo; approach&lt;/h3>
&lt;p>Preferably find a space where multiple libraries exist. As long as one well
used library is present, it is fine if unused ones exist too. Frequently
contemporary libraries aim to overcome walls their classic brethren hit, or
are novel approaches to the same problem that offer a different set of
tradeoffs v/s the classics.&lt;/p>
&lt;p>There is much to learn from bygone classics, but only after one works through
the contemporary stuff, and has several &amp;ldquo;Wait, but why?&amp;rdquo; moments.&lt;/p>
&lt;h3 id="alt-implementation">Alt-implementation&lt;/h3>
&lt;p>The Black Belt move is to combine experimentation and comparative lit. and
try to hack up your own alternate implementation, by purposely taking a
completely different approach to representing the problem space, as compared
to the library under study.&lt;/p>
&lt;h2 id="suggested-projects-with-short-reasons-why-to-read">Suggested projects with short reasons why to read&lt;/h2>
&lt;p>This is a first-cut top-of-mind list, from the top of &lt;em>my&lt;/em> chaotic mind.
Take with a pinch of salt!&lt;/p>
&lt;p>Cross-reference with &lt;a href="https://github.com/clojure/clojure-site/issues/586">this discussion&lt;/a>
where folks are trying to figure out what projects to suggest, how, and why,
as part of an FAQ or a Guide at the official Clojure website.&lt;/p>
&lt;h3 id="web-html-css">web/HTML/CSS&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/weavejester/hiccup">weavejester/hiccup&lt;/a>&lt;/strong> to understand
a natural translation of one domain (HTML) to Clojure data. Writing HTML as
Clojure data is what we mean when we say &amp;ldquo;well, it&amp;rsquo;s just data&amp;rdquo; or &amp;ldquo;data DSL&amp;rdquo;.&lt;/li>
&lt;li>&lt;strong>&lt;a href="https://github.com/noprompt/garden">noprompt/garden&lt;/a>&lt;/strong>
which does unto CSS what Hiccup does unto HTML.&lt;/li>
&lt;/ul>
&lt;h3 id="web-http">web/HTTP&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/ring-clojure/ring">Ring&lt;/a>&lt;/strong>, to understand one of the
most popular HTTP server abstractions in the Clojureverse.&lt;/li>
&lt;/ul>
&lt;h3 id="clojure-itself">Clojure itself&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/clojure/clojure/blob/master/src/clj/clojure/test.clj">Clojure.test&lt;/a>&lt;/strong>
which is the built-in testing framework, in a surprisingly small amount of
code. Also, incidentally, to start feeling OK diving into Clojure&amp;rsquo;s own source.&lt;/li>
&lt;/ul>
&lt;h3 id="database-queries">Database queries&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/seancorfield/honeysql">honeysql&lt;/a>&lt;/strong>
to grok a way to represent the Domain of SQL queries as Clojure data.&lt;/li>
&lt;/ul>
&lt;h3 id="music-maker">Music maker&lt;/h3>
&lt;p>There&amp;rsquo;s lots out there that I don&amp;rsquo;t know of, but&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/overtone/overtone">overtone/overtone&lt;/a>, but it is a big project&lt;/li>
&lt;li>&lt;a href="https://github.com/ssrihari/ragavardhini">ssrihari/ragavardhini&lt;/a> is smaller&lt;/li>
&lt;/ul>
&lt;h3 id="system-start-stop-thingy">&amp;ldquo;System&amp;rdquo; start/stop thingy&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/stuartsierra/component">stuartsierra/component&lt;/a>&lt;/strong>
&amp;ldquo;Managed lifecycle of stateful objects in Clojure&amp;rdquo;.&lt;/li>
&lt;/ul>
&lt;h3 id="app-configuration-thingy">App configuration thingy&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/juxt/aero">juxt/aero&lt;/a>&lt;/strong>
&amp;ldquo;A small library for explicit, intentful configuration.&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;h3 id="applications-designed-for-copy-and-hack">Applications designed for &amp;ldquo;copy-and-hack&amp;rdquo;&lt;/h3>
&lt;p>As &lt;a href="https://github.com/puredanger">@puredanger&lt;/a> and &lt;a href="https://github.com/plexus">@plexus&lt;/a> have &lt;a href="https://github.com/clojure/clojure-site/issues/586">written here&lt;/a>:
If you&amp;rsquo;re wondering &amp;ldquo;what&amp;rsquo;s something similar I can copy and hack on&amp;rdquo; or
&amp;ldquo;what does a real project look like&amp;rdquo;?&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/seancorfield/usermanager-example">seancorfield/usermanager-example&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/clojureverse/clojurians-log-app">clojureverse/clojurians-log-app&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="large-scale-repos">Large-scale repos&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/nasa/Common-Metadata-Repository">NASA&amp;rsquo;s Common Metadata Repository&lt;/a>
project, just to have one&amp;rsquo;s mind blown :D&lt;/li>
&lt;/ul>
&lt;h2 id="library-maintainers-would-howtoreadmes-make-sense">Library maintainers: Would HOWTOREADMEs make sense?&lt;/h2>
&lt;p>Hi! First, thank you for your library work! I&amp;rsquo;m just thinking aloud here&amp;hellip;&lt;/p>
&lt;p>Suppose Clojure library authors write little reading guides for their projects;
&lt;strong>&amp;ldquo;How to read me&amp;quot;s&lt;/strong>? Maybe a paragraph or two that provides context like:&lt;/p>
&lt;ul>
&lt;li>Suggested entry point and Meta-dot pathway&lt;/li>
&lt;li>The most important namespace(s)&lt;/li>
&lt;li>Interesting functions&lt;/li>
&lt;li>Tests or Rich comments to try out on priority&lt;/li>
&lt;li>Any known hairy-scary bits or gotchas&lt;/li>
&lt;li>Perhaps a line or two suggesting &amp;ldquo;compare with Alternate Libs A, B, C&amp;rdquo;&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;p>A reader may fruitfully combine this guidance with information about project
purpose, rationale, and any open issues marked &amp;ldquo;beginner&amp;rdquo; etc.&lt;/p></content></item><item><title>Why and How I use "Org Mode" for my writing and more</title><link>/posts/why-and-how-i-use-org-mode/</link><pubDate>Tue, 19 Apr 2022 00:27:40 +0530</pubDate><guid>/posts/why-and-how-i-use-org-mode/</guid><description>&lt;p>You won&amp;rsquo;t know of &lt;a href="https://orgmode.org/">Org Mode&lt;/a> if you live a normal life.
&lt;a href="https://orgmode.org/features.html">This page&lt;/a> has pictures that will help you visualise it.&lt;/p>
&lt;p>It is a decidedly un-sexy under-marketed weirdly niche tool for note taking
(and a lot more). &amp;ldquo;Your life in plain text&amp;rdquo;, they say.&lt;/p>
&lt;p>Yet, I find myself telling people that they will have to pry it from my cold
dead hands. Which befuddles me. Why, as an ingrate software nerd who has
soured on software technology &amp;mdash;talk about biting the hand that feeds&amp;mdash; do
I evince such strong sentiment about a software program?!&lt;/p>
&lt;p>Also, &lt;em>plain text&lt;/em>? In 2022?!&lt;/p>
&lt;p>Well, join the wonder club. I&amp;rsquo;ve been wondering the same thing!&lt;/p>
&lt;p>With further ado, I will:&lt;/p>
&lt;ul>
&lt;li>illustrate my org-mode use with real examples&lt;/li>
&lt;li>describe my &amp;ldquo;what, why, and how&amp;rdquo; in generally applicable terms&lt;/li>
&lt;li>discuss some common objections and concerns&lt;/li>
&lt;li>offer some shiny brain-food for your imagination&lt;/li>
&lt;/ul>
&lt;p>Also nerd alert. I can&amp;rsquo;t remove some technicalities without also dumbing it
down and doing your intelligence a disservice. Email me if you need help.&lt;/p>
&lt;p>Take what is useful and discard the rest!&lt;/p></description><content>&lt;p>You won&amp;rsquo;t know of &lt;a href="https://orgmode.org/">Org Mode&lt;/a> if you live a normal life.
&lt;a href="https://orgmode.org/features.html">This page&lt;/a> has pictures that will help you visualise it.&lt;/p>
&lt;p>It is a decidedly un-sexy under-marketed weirdly niche tool for note taking
(and a lot more). &amp;ldquo;Your life in plain text&amp;rdquo;, they say.&lt;/p>
&lt;p>Yet, I find myself telling people that they will have to pry it from my cold
dead hands. Which befuddles me. Why, as an ingrate software nerd who has
soured on software technology &amp;mdash;talk about biting the hand that feeds&amp;mdash; do
I evince such strong sentiment about a software program?!&lt;/p>
&lt;p>Also, &lt;em>plain text&lt;/em>? In 2022?!&lt;/p>
&lt;p>Well, join the wonder club. I&amp;rsquo;ve been wondering the same thing!&lt;/p>
&lt;p>With further ado, I will:&lt;/p>
&lt;ul>
&lt;li>illustrate my org-mode use with real examples&lt;/li>
&lt;li>describe my &amp;ldquo;what, why, and how&amp;rdquo; in generally applicable terms&lt;/li>
&lt;li>discuss some common objections and concerns&lt;/li>
&lt;li>offer some shiny brain-food for your imagination&lt;/li>
&lt;/ul>
&lt;p>Also nerd alert. I can&amp;rsquo;t remove some technicalities without also dumbing it
down and doing your intelligence a disservice. Email me if you need help.&lt;/p>
&lt;p>Take what is useful and discard the rest!&lt;/p>
&lt;blockquote>
&lt;p>Org is a highly flexible structured plain text file format, composed of a
few simple, yet versatile, structures — constructed to be both simple enough
for the novice and powerful enough for the expert.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://orgmode.org">orgmode.org&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Yes, it&amp;rsquo;s true.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#what-i-use-org-mode-for">What I use Org Mode for&lt;/a>&lt;/li>
&lt;li>&lt;a href="#a-pretty-good-example-of-my-usage">A pretty good example of my usage&lt;/a>&lt;/li>
&lt;li>&lt;a href="#how-i-got-into-the-org-life">How I got into the org life&lt;/a>&lt;/li>
&lt;li>&lt;a href="#some-common-objections-and-questions">Some common objections and questions&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#bleh-a-church-of-emacs-evangelist-dot-dot-dot">Bleh! A Church of Emacs evangelist&amp;hellip;&lt;/a>&lt;/li>
&lt;li>&lt;a href="#but-seriously-emacs-winkwink-amirite">But seriously, Emacs winkwink, amirite?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#but-what-if-one-app-is-not-enough">But what if one app is not enough?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#but--sexy-vc-funded-app">But (sexy VC-funded app)?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#but-isn-t-org-mode-a-productivity-app">But isn&amp;rsquo;t org-mode a productivity app?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#but-why-org-instead-of-markdown">But why org instead of markdown?&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#help-where-do-i-even-begin">Help! &lt;em>Where do I even begin&lt;/em>?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#shiny-brain-food-for-your-imagination">Shiny brain-food for your imagination&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;hr>
&lt;h2 id="what-i-use-org-mode-for">What I use Org Mode for&lt;/h2>
&lt;p>Over the last 8-odd years, I have &lt;em>gradually&lt;/em> come to use Org Mode (a.k.a.
&lt;em>org-mode&lt;/em>, &lt;em>orgmode&lt;/em>, or just &lt;em>org&lt;/em>) for all my:&lt;/p>
&lt;ul>
&lt;li>note-taking&lt;/li>
&lt;li>live demo presentations&lt;/li>
&lt;li>slide decks&lt;/li>
&lt;li>diagramming&lt;/li>
&lt;li>interactive polyglot computational notebooks&lt;/li>
&lt;li>blogging. Indeed, this blog post and the surrounding website are written in
org text and &lt;a href="https://www.evalapply.org/#footer">made with&lt;/a> tools that work with orgmode.&lt;/li>
&lt;/ul>
&lt;p>I have &lt;strong>never&lt;/strong> used org for managing TODOs, calendaring, or any &amp;ldquo;productivity&amp;rdquo;
use cases (time tracking, GTD etc.), which it has become popular for. Nor, as
is also popular these days, is it my &amp;ldquo;second brain&amp;rdquo;. (Or maybe it is because
my ~/org directory is a total disaster zone. I just disorganise and use Emacs
to search through the files.).&lt;/p>
&lt;p>Some Emacs-using manager-type friends have built very high-leverage workflows
to help them stay on top of operations, coaching/mentoring, project management,
and more. No other tool in the market comes close to what they can get their
org workflows to do for them. (Also, the pun is deeply satisfying &amp;mdash; to run
one&amp;rsquo;s org with org :)&lt;/p>
&lt;p>I too have yet to find an alternative that lets me do &lt;em>all&lt;/em> my stuff more
seamlessly and capably than org-mode. Granted I use the &lt;em>Emacs&lt;/em> implementation
of org-mode, but I&amp;rsquo;m optimistic that more apps (web, mobile, desktop) are
becoming general enough. I enumerate several of them later.&lt;/p>
&lt;h2 id="a-pretty-good-example-of-my-usage">A pretty good example of my usage&lt;/h2>
&lt;p>I enjoy teaching tutorial-style talks and workshops, and I like to live
dangerously; only doing live demos. I recently did one of those at Functional
Conf 2022. Here is the sequence of events of how things got done, via org-mode.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Development&lt;/strong>:
The talk started off &lt;a href="https://gist.github.com/adityaathalye/1eeb80e407fa937337402b1f15480b24">as prose&lt;/a> in an orgmode file
(click &amp;ldquo;Raw&amp;rdquo; button to see the orgmode text I actually typed out).
Thanks to &lt;a href="https://orgmode.org/worg/org-contrib/babel/">org-babel&lt;/a>,
I was programming and testing the code examples &lt;em>right inside the file&lt;/em>,
as I went along developing and refining my ideas. This facility is known
as &amp;ldquo;live computational notebook&amp;rdquo;. org-babel was separate before, but now
it comes built into the Emacs implementation of Org Mode. Epic win!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Publishing&lt;/strong>:
In fact, this content was a draft blog post in my website directory. Once
it got decently OK, &lt;a href="https://www.evalapply.org/posts/n-ways-to-fizzbuzz-in-clojure/">I published it to my blog&lt;/a>, to solicit feedback
and to maintain as a living document, progressively improving the
prose / examples / explanations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Slideware&lt;/strong>:
The reviewed and revised blog post rapidly turned into
&lt;a href="https://gist.github.com/adityaathalye/398d6fc4c8ce9d23e2e393425f0b6454">this hastily-made presentation version&lt;/a>
(click &amp;ldquo;Raw&amp;rdquo; button to see the actual text I edited the post down to).
I simply deleted prose, support material and extra-examples until I had
just-right examples I could fit into a screen at a time (at a suitably
large font size).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Live Demo&lt;/strong>:
That in turn enabled &lt;a href="https://www.youtube.com/watch?v=BTouODWov-A">the live demo&lt;/a> (video)
with live code evaluation (with org-babel),
and slide navigation using &lt;a href="https://github.com/takaxp/org-tree-slide">org-tree-slide&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>PDF Handout&lt;/strong>:
Since then I have &lt;a href="https://raw.githubusercontent.com/adityaathalye/slideware/master/n-ways-to-fizz-buzz-clj.org">cleaned up and restructured&lt;/a>
the hastily-done presentation version so it exports neatly via &lt;a href="https://orgmode.org/worg/exporters/beamer/tutorial.html">Beamer&lt;/a>,
into this &lt;a href="https://github.com/adityaathalye/slideware/blob/master/n-ways-to-fizz-buzz-clj.pdf">nifty PDF slide deck&lt;/a>.
The heavily improved and reformatted orgmode version remains eminently
demoscene-able. If I were immune to last-minute prep, this is the version
I would have used for the live demo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Professor Points&lt;/strong>:
I also get intermediate &lt;a href="https://github.com/adityaathalye/slideware/blob/master/n-ways-to-fizz-buzz-clj.tex">tex output&lt;/a> for free,
which I don&amp;rsquo;t need, but may please you if you are a professor (or said
professor&amp;rsquo;s hopelessly sleep derived grad students).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Version-controlled and Highly Reproducible&lt;/strong>:
I can go back to any saved version of any of the org files above, and
reliably reproduce output for &amp;ldquo;distribution&amp;rdquo; (PDF, tex, HTML etc.).
In other words, it is all
highly reproducible.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="how-i-got-into-the-org-life">How I got into the org life&lt;/h2>
&lt;p>Well, orgmode was created in anger almost 2 decades ago (circa 2003) by a
particularly nerdy astronomer &amp;mdash; &lt;a href="https://staff.science.uva.nl/c.dominik/">Carsten Dominic&lt;/a> &amp;mdash; who was fed up with the
anemic note taking tools du jour. I discovered it about a decade ago (circa
2013), right after I changed careers to &amp;ldquo;tech&amp;rdquo;, because all the gentlenerds
at the little company used Emacs. Told ya. Not normal. (Although, surprisingly,
lots of normies use it too. Hi friends!).&lt;/p>
&lt;p>But, long before I found Emacs org-mode, I had Microsoft OneNote in a past
life as a Suit. In Gen-Z terms, OneNote was (is?) a &amp;ldquo;local-first&amp;rdquo; Personal
Knowledge Management (PKM) app (that sold profitably&amp;mdash;what a concept).
I was a superfan and used it All The Time for All The Things. In hindsight,
I wonder if they didn&amp;rsquo;t pinch their ideas from org-mode &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Anyway, after I fell into the oddball world of Unix and Emacs users, I started
with &amp;ldquo;well, all I really need is a way to write and search copious notes&amp;rdquo;.&lt;/p>
&lt;p>If memory serves, it was m&amp;rsquo;colleague &lt;a href="https://twitter.com/firesofmay">Mayank&lt;/a>, who&amp;rsquo;s Emacs I first saw org in,
and m&amp;rsquo;other colleague &lt;a href="https://twitter.com/vedang">Vedang&lt;/a> who&amp;rsquo;s supercharged org-life provided ample
inspiration as well as opportunities to rib him about his org dependence.
With a little bit of monkey-see-monkey-do and some help, I started dropping
words into .org files.&lt;/p>
&lt;p>Little did I know how it would gradually absorb all my OneNote use cases,
and provide a lot more.&lt;/p>
&lt;p>I started with plain notes and checkboxes. It was just that for many months.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Then I discovered org-babel for code-aware syntax highlighting and editing,
because I wanted to also keep nice-looking code snippets in my documents.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>After several more months, I discovered org-babel supports interactive code
evaluation with results capture. WAT??!!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Then a year or two in, I started doing little talks. By that time I was
clued-in enough to be pretty sure I&amp;rsquo;d find something to make org-mode do it.
And sure enough there exist things like org-tree-slide and org-present.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Then I wanted to give PDF handouts and figured out how to export things.
It was a bit painful to learn, but quite useful overall.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Now my website is under org management :D&lt;/p>
&lt;/li>
&lt;li>
&lt;p>And whenever some new requirement comes up, org-mode is my first port of
call, because &lt;em>crucially&lt;/em>, &lt;strong>everything works with everything else&lt;/strong>. In
seamless composability resides the power of the ecosystem that has grown
atop org-mode, both within the world of Emacs, and without it.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Sometimes I have to put in annoyingly extra effort to make some new add-on
requirement play well with my other requirements. But each time I&amp;rsquo;ve come away
knowing that effort was way lower than having to find, shortlist, pick and
learn an entire new tool with its own user interface, opinionated workflow,
inevitable workarounds, and maybe incompatible data format (not plain org text).&lt;/p>
&lt;p>For the small price of occasional annoyance, I get to keep using my exact
same workflow for everything. This has been a surprise win that is hard to
explain in words, especially in today&amp;rsquo;s world where standalone apps have
normalised disconnected silos. In hindsight, I didn&amp;rsquo;t really know exactly how
much I would come to value composability. I do. A lot!&lt;/p>
&lt;p>Which is why, now you will have to pry org-mode from my cold dead hands.&lt;/p>
&lt;h2 id="some-common-objections-and-questions">Some common objections and questions&lt;/h2>
&lt;p>A reader may rightfully complain about several parts of this blog post, as
well as the strangeness of Org Mode.&lt;/p>
&lt;h3 id="bleh-a-church-of-emacs-evangelist-dot-dot-dot">Bleh! A Church of Emacs evangelist&amp;hellip;&lt;/h3>
&lt;p>Sorry, &lt;a href="https://www.emacswiki.org/emacs/ChurchOfEmacs">programmer in-joke&lt;/a> :-)&lt;/p>
&lt;p>Orgmode became culturally easy for me as I was already using the venerable
Emacs editor, but my ardour has little to do with my affiliation with the
Church of Emacs. It has everything to do with &lt;em>utility&lt;/em>. Utility is contextual.
Which, for me, is &amp;ldquo;to write things down such that I can use it all usefully
in (many) other ways&amp;rdquo;.&lt;/p>
&lt;p>Besides, Emacs is no longer the only useful interface to org. Which, in fact,
makes me want to stick with org-mode even more. Growing support is easing
collaboration via org files.&lt;/p>
&lt;h3 id="but-seriously-emacs-winkwink-amirite">But seriously, Emacs winkwink, amirite?&lt;/h3>
&lt;p>Yes, it is a valid question because Emacs contains the canonical, complete
implementation of org-mode. Many people use Emacs &lt;em>just&lt;/em> for org-mode.&lt;/p>
&lt;p>But also, seriously, no.&lt;/p>
&lt;p>Because not even the most hardcore &lt;em>Emacs&lt;/em> org-mode users use all of org-mode.
One has particular requirements, which are likely serviceable by particular
apps and tools enumerated below.&lt;/p>
&lt;p>See, it&amp;rsquo;s just like normal people and spreadsheets. Not even the guru-est of
y&amp;rsquo;all use all of your spreadsheet software. Or like normal people, normal pens,
and normal paper. Even a child can use that stuff, but I&amp;rsquo;ll eat my hat if
you go to bed with my handwriting and wake up an ace calligrapher. BUT, you
will probably be able to wake up with a pretty good idea, scribble it down
and maybe change the world (if you can read my hand).&lt;/p>
&lt;p>Utility is contextual, remember?&lt;/p>
&lt;p>So here are ways to use org-mode without Emacs, for useful-to-you purposes,
without even caring it is orgmode text underneath.&lt;/p>
&lt;p>Mobile, Web, and Desktop apps:&lt;/p>
&lt;ul>
&lt;li>mobile: &lt;a href="https://orgro.org/">Orgro&lt;/a>, a mobile Org Mode file viewer for iOS and Android&lt;/li>
&lt;li>mobile: &lt;a href="https://plainorg.com/">Plain Org&lt;/a>, org text view and editor for iOS&lt;/li>
&lt;li>mobile: &lt;a href="https://www.orgzly.com/">Orgzly&lt;/a>, org text viewer and editor for Android
(I use this on my phone, and sync notes to my PC with Dropbox).&lt;/li>
&lt;li>mobile: &lt;a href="https://beorg.app/">beorg&lt;/a> for iOS (tasks, projects, notes)&lt;/li>
&lt;li>mobile: &lt;a href="https://flathabits.com/">flathabits&lt;/a>, inspired by Atomic Habits, with
all your data stored in org files&lt;/li>
&lt;li>web+desktop: &lt;a href="https://logseq.com/">logseq&lt;/a>, a privacy-first, open-source knowledge base&lt;/li>
&lt;li>web: &lt;a href="https://organice.200ok.ch/">organise&lt;/a>, web-based org text editor and viewer&lt;/li>
&lt;li>web: &lt;a href="https://braintool.org/">braintool.org&lt;/a>, a Chrome plugin &amp;ldquo;to easily
capture and categorize all the information and knowledge you want to keep
track of, right at the point you discover it or create it&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;p>Text Editors (apart from Emacs):&lt;/p>
&lt;ul>
&lt;li>You can type &lt;a href="https://orgmode.org/quickstart.html">org markup text&lt;/a> (syntax)
in any text editor, even Notepad.&lt;/li>
&lt;li>Vim: &lt;a href="https://github.com/nvim-orgmode/orgmode">https://github.com/nvim-orgmode/orgmode&lt;/a>&lt;/li>
&lt;li>Atom: &lt;a href="https://atom.io/packages/org-mode">https://atom.io/packages/org-mode&lt;/a>&lt;/li>
&lt;li>VSCode: &lt;a href="https://github.com/vscode-org-mode/vscode-org-mode">https://github.com/vscode-org-mode/vscode-org-mode&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>A variety of utilities to:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://orgmode.org/tools.html">Publish, Import, Export, Parse&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://orgmode.org/worg/org-tools/index.html">More community-enumerated tools&lt;/a> for the same&lt;/li>
&lt;li>Even Github, Gitlab etc. support org markup these days!&lt;/li>
&lt;/ul>
&lt;p>I&amp;rsquo;m sure more people are making and releasing tools backed by org-mode text.&lt;/p>
&lt;p>The future is bright!&lt;/p>
&lt;h3 id="but-what-if-one-app-is-not-enough">But what if one app is not enough?&lt;/h3>
&lt;p>Having your stuff written in a standard portable format like Org Mode text
can become very useful, if you need / want to transcend your current app.
But, until such time, feel free to use one app for one thing today (say tasks),
and another one for another reason (say note taking), and yet another for,
say, habits.&lt;/p>
&lt;p>As long as those org-mode based apps don&amp;rsquo;t lock in your data (most don&amp;rsquo;t),
then odds are that you will be able to roll all your use cases under one
single app later. Worst case, if no other sufficiently capable app is
available, or if the app you&amp;rsquo;re using shuts down, Emacs will be there to
fall back on!&lt;/p>
&lt;p>Now, Emacs is unfortunately oddball because of half a century of conceptual
baggage. Most commonly, it fetches derision for its notoriously awkward
keyboard shortcuts. That is mainly because Emacs was already old by the time
the PC mouse became mainstream. Keyboards were the only standard method to
talk to computers. Also the key combinations feel strange because they don&amp;rsquo;t
make keyboards like they used to &lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>BUT, Emacs accepts you as you are!&lt;/p>
&lt;p>Beneath its curmudgeonly exterior &lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>, it is perhaps &lt;em>the&lt;/em> most
accessible software application out there &lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>!&lt;/p>
&lt;p>Even I, after so many years of using Emacs org-mode, know barely a handful
of very frequently-used keyboard shortcuts (TABTAB to expand tree structures,
Shift-TAB to collapse them, ALT-up/down to move trees etc.). Most of the time
I just search for commands in the Emacs command menu system (ALT-x followed
by a guess for the name of the org command, e.g. &lt;code>ALT-x org export&lt;/code>, and the
system shows me command options with &amp;lsquo;export&amp;rsquo; in the name).&lt;/p>
&lt;p>Emacs will always be a great choice because org-mode is built into Emacs.
So the complete feature set of org-mode is available with zero configuration.
Just install Emacs, mouse-open-create a new &lt;code>.org&lt;/code> file and start typing text.&lt;/p>
&lt;h3 id="but--sexy-vc-funded-app">But (sexy VC-funded app)?&lt;/h3>
&lt;p>Immersed as I was, in a herd of Emacsen, I started to value some things a lot.&lt;/p>
&lt;p>Offline-first being one, which box OneNote checked off handsomely. &lt;em>BUT&lt;/em>
proprietary data formats became deal-breakers too. It pains me that I can&amp;rsquo;t
trivially access my old OneNote dump to snicker at that cocky past-suit-me.&lt;/p>
&lt;p>The cool new tools have also failed to entice me away. Frankly, OneNote&amp;rsquo;s UX
and capability 15 years ago hands-down beats most of them. Which may also be
why da noo cool don&amp;rsquo;t impress. But that&amp;rsquo;s less worse than the fact that that
The Cloud is the new proprietary data format. If my OneNote notes were in The
Cloud, and The Cloud &amp;ldquo;accidentally&amp;rdquo; chose to lock me out, I wouldn&amp;rsquo;t even be
able to dream of snickering at past-suit-me.&lt;/p>
&lt;p>So I now value &lt;em>&lt;strong>local first&lt;/strong>&lt;/em>, which implies &lt;em>full&lt;/em> data ownership, with
content in a highly portable format, without rigid dependence on 3rd parties,
especially not networks or remote services.&lt;/p>
&lt;p>Of course, I now enjoy the specter of losing my backups, but I prefer being
(ir)responsible to myself over being beholden to the mysterious demigods that
reside in The Cloud Computer. Also, I&amp;rsquo;m used to it since my OneNote days.
Suits can be responsible too, you know.&lt;/p>
&lt;p>Now, &lt;em>&amp;ldquo;Your life in plain text&amp;rdquo;&lt;/em>, as the org website says, is an absolute
must-have. Plus, it gives me everything I liked in OneNote and more.&lt;/p>
&lt;p>&amp;ldquo;Win, Win.&amp;rdquo;, as the Suits say.&lt;/p>
&lt;h3 id="but-isn-t-org-mode-a-productivity-app">But isn&amp;rsquo;t org-mode a productivity app?&lt;/h3>
&lt;p>No. It is fundamentally about writing in a structured plain text data format.&lt;/p>
&lt;p>Carsten Dominic created it to be a &amp;ldquo;system of note taking and project planning&amp;rdquo;,
with the insight that we think of tasks in context of projects. So it makes
a lot of sense to unify prose-writing with denoting TODOs and project meta
information directly in context of the prose.&lt;/p>
&lt;p>Now, here&amp;rsquo;s the nuance. While org prescribes a certain &lt;em>syntax&lt;/em> to structure
text and to describe meta-information, it does &lt;em>not&lt;/em> prescribe or force &lt;em>any
one method&lt;/em>, to interpret and use the text; e.g. GTD or Kanban or GANTT or
what have you.&lt;/p>
&lt;p>Besides, &amp;ldquo;productivity&amp;rdquo; means different things to different people. If your
old man who types with two fingers routinely invents large scale industrial
systems (at least one per year), you too would have a rather different view
of what &amp;ldquo;productivity&amp;rdquo; means, and what tools one needs to be productive,
compared to the many Internet subcultures and gurus who are each passionately
vocal about their version of tomato timers.&lt;/p>
&lt;p>Anyway, it turns out that given structured text and maybe associated metadata,
one can build interesting use-cases and workflows that consume the content
as a data structure.&lt;/p>
&lt;p>Lastly, we don&amp;rsquo;t &lt;em>have&lt;/em> to think in &amp;ldquo;productivity&amp;rdquo; terms. The basic &amp;ldquo;outline&amp;rdquo;
way of writing text is &lt;em>absolutely fine and useful&lt;/em> just by itself. Because
writing = thinking. And because structured writing tool can help us easily
structure / restructure our thinking. And because even if we share it as-is,
our text is at least legible to anyone regardless of their text reading tool.&lt;/p>
&lt;p>Like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-org" data-lang="org">*&lt;span style="font-weight:bold"> Top level headline&lt;/span>
some text
&lt;span style="color:#75715e">**&lt;/span> A second level
some other text
&lt;span style="color:#75715e">***&lt;/span> A third level
still other text
&lt;span style="color:#75715e">***&lt;/span> Another Third level
more still other text
*&lt;span style="font-weight:bold"> Another top level headline&lt;/span>
*&lt;span style="font-weight:bold"> Lord of the Rings&lt;/span>
My favorite scenes are (in this order)
&lt;span style="color:#66d9ef">1.&lt;/span> The attack of the Rohirrim
&lt;span style="color:#66d9ef">+ &lt;/span>Eowyn&amp;#39;s fight with the witch king
a. this was already my favorite scene in the book
b. I really like Miranda Otto.
&lt;span style="color:#66d9ef">3.&lt;/span> Peter Jackson being shot by Legolas
&lt;span style="color:#66d9ef">- &lt;/span>on DVD only
He makes a really funny face when it happens.
But in the end, no individual scenes matter but the film as a whole.
Important actors in this film are:
&lt;span style="color:#66d9ef">- &lt;/span>Elijah Wood :: He plays Frodo
&lt;span style="color:#66d9ef">- &lt;/span>Sean Astin :: He plays Sam, Frodo&amp;#39;s friend. I still remember him
very well from his role as Mikey Walsh in &lt;span style="font-style:italic">/The Goonies/&lt;/span>.
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="but-why-org-instead-of-markdown">But why org instead of markdown?&lt;/h3>
&lt;p>OK, so I don&amp;rsquo;t dislike markdown, I just like org much better. I&amp;rsquo;m facing off
org v/s md because md is popular and widespread. Org Mode isn&amp;rsquo;t. Naturally,
org &lt;em>looks&lt;/em> odd in comparison, at first glance. But really, they have plenty
in common.&lt;/p>
&lt;p>For one, there are several flavours of markdown, each with their own syntax
for how to describe text. Org Mode syntax is not very different. The general
concepts remain similar. So all one really needs is a &lt;a href="https://orgmode.org/quickstart.html">syntax cheat sheet&lt;/a>
for org.&lt;/p>
&lt;p>Every other benefit of writing in structured plaintext remains available to
me, including fine-grained version control, maximum portability, prose-like
legibility, publishing to any other format (PDF, html, tex, odf, asciidoc,
as well as various markdown variants).&lt;/p>
&lt;p>To me, paying the cost of learning org syntax was well worth it because it
afforded me access to text structured in one standard format, with better
usability, functionality, and historical support than the various markdowns.
I think this article makes a good case for learning org syntax:
&lt;a href="https://karl-voit.at/2017/09/23/orgmode-as-markup-only/">Org Mode Is One of the Most Reasonable Markup Languages to Use for Text&lt;/a>&lt;/p>
&lt;p>Plus, org text is explicitly designed to double as a raw datastructure that
can be used to drive workflows, like showing presentations, or interactive
notebooks, or project management etc. This design choice is explicitly &lt;em>not&lt;/em>
the mandate of most other plaintext document formats.&lt;/p>
&lt;h2 id="help-where-do-i-even-begin">Help! &lt;em>Where do I even begin&lt;/em>?&lt;/h2>
&lt;p>This is a common problem because orgmode has become A Lot!&lt;/p>
&lt;p>Whatever you want to achieve will almost always be possible, if not through
a special-purpose org-mode app, then through &lt;em>Emacs&lt;/em> org-mode. Being free to
do anything is great, but it is also bewildering!&lt;/p>
&lt;p>I&amp;rsquo;d say eat the Elephant one bite at a time, in a problem/solution format,
and that too only as long as you&amp;rsquo;re hungry.&lt;/p>
&lt;p>Method:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Review the intro on the front page of the &lt;a href="https://orgmode.org/quickstart.html">org-mode website&lt;/a>,
see the features, and the quickstart, to get an idea of what it&amp;rsquo;s like.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Consider &lt;em>&amp;ldquo;I want to do X. Can org-mode help me?&amp;quot;&lt;/em> where X is &lt;strong>the most
important&lt;/strong> thing for &lt;strong>you&lt;/strong>. The answer will almost certainly be &lt;em>&amp;ldquo;Yes m&amp;rsquo;lorx,
this way please.&amp;quot;&lt;/em>. See if any of the apps I listed previously, fit your
requirement.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Then do &lt;strong>only that X&lt;/strong> and see if it works for you. If you find yourself
reaching for your orgmode app all the time, for X, then you know you have
a winner. This trick keeps things simple, which should give you a strong
sense of utility. It should also keep switching costs low if it fails you
for X. In that case, your data is yours, so you can take it to another app.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you can solve your X admirably, then you can think about your other
Y/Z/PQR requirements and start solving them. Maybe in the same app or maybe
in a second and third app. Many apps is fine because your data format is
the same and you would have an escape hatch from the app. Again, consulting
the org-mode website will help match Y/Z/PQR to org.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="shiny-brain-food-for-your-imagination">Shiny brain-food for your imagination&lt;/h2>
&lt;p>I love to watch/read tutorials, HOWTOs, essays, trick-shots etc. published by
org super-fans and super-users. Lots of inspiration exists out there! I don&amp;rsquo;t
know what I don&amp;rsquo;t know!&lt;/p>
&lt;p>Whenever I am stuck, I go to one of these resources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://orgmode.org/worg/exporters/beamer/tutorial.html">orgmode.org&lt;/a> is the canonical reference manual.&lt;/li>
&lt;li>&lt;a href="https://orgmode.org/worg/exporters/beamer/tutorial.html">Worg&lt;/a> is full of gold (tips, tricks, tutorials, hacks).&lt;/li>
&lt;/ul>
&lt;p>Whenever I&amp;rsquo;m looking for inspiration, I go to these resources:&lt;/p>
&lt;ul>
&lt;li>Document: norang&amp;rsquo;s &lt;strong>epic&lt;/strong> &lt;a href="http://doc.norang.ca/org-mode.html">life in orgmode&lt;/a> page&lt;/li>
&lt;li>Document: EH Neilsen&amp;rsquo;s &lt;a href="http://ehneilsen.net/notebook/orgExamples/org-examples.html">Emacs org-mode examples and cookbook&lt;/a>
that shows how to make org into a full-bore computing environment.&lt;/li>
&lt;li>Demo: Carsten Dominic&amp;rsquo;s timeless presentation
&amp;ldquo;&lt;a href="https://www.youtube.com/watch?v=oJTwQvgfgMM">Emacs Org-mode - a system for note-taking and project planning&lt;/a>&amp;rdquo;&lt;/li>
&lt;li>Demo: Youtuber Rainer Konig has published a &lt;strong>fantastic&lt;/strong> series of short,
clear tutorials of the many &lt;a href="https://www.youtube.com/playlist?list=PLVtKhBrRV%5FZkPnBtt%5FTD1Cs9PJlU0IIdE">things one can do with Org&lt;/a>.&lt;/li>
&lt;li>Demo: &lt;a href="https://www.youtube.com/watch?v=FtieBc3KptU">Emacs For Writers&lt;/a> by Jay Dixit,
a widely-published science writer who is a non-programmer.&lt;/li>
&lt;li>Demo: &lt;a href="https://www.youtube.com/watch?v=SzA2YODtgK4">Getting Started With Org Mode&lt;/a>, for nerds of all feather.&lt;/li>
&lt;li>Demo: &lt;a href="https://www.youtube.com/watch?v=0g9BcZvQbXU">Consistent Technical Documents Using Emacs and Org Mode&lt;/a>&lt;/li>
&lt;li>Demo: How m&amp;rsquo;colleague &lt;a href="https://twitter.com/suvratapte">Suvrat&lt;/a> uses Emacs org-mode&amp;rsquo;s
&amp;ldquo;Org Capture&amp;rdquo; feature &lt;a href="https://www.youtube.com/watch?v=tFt6plDQm58">to stay in flow&lt;/a> while programming.&lt;/li>
&lt;li>Demo: How m&amp;rsquo;colleague &lt;a href="https://www.youtube.com/watch?v=KZoQ4EkfDPo">Vedang&lt;/a> uses Emacs org-mode
to run his whole life, as a team lead, project manager, and fallible human.&lt;/li>
&lt;li>Search &amp;ldquo;orgmode&amp;rdquo; in YouTube for &lt;em>lots&lt;/em> more!&lt;/li>
&lt;/ul>
&lt;p>And if you need help getting started or getting un-stuck or advancing your
org-life, email me! (&lt;em>weblog&lt;/em> at this site).&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>OneNote came complete with always-on auto-save, outline text, checklists, cross linking, multiple notebooks, categories/tags, search, export, email and calendar integration. Even multimedia embeds, text-to-speech, text extraction from images, audio notes, exports etc. All available on-PC, sans Internet. But, I also used Ray Ozzie&amp;rsquo;s Groove app (Dropbox a decade before Dropbox, and apparently reincarnated as Microsoft OneDrive), so syncing was seamless too. And all this was available for the price of an expensive but lifetime software license plus a piece of your soul. Cheap for me as a Suit, and so I lapped it up. Like I said, it&amp;rsquo;s about utility and it was &lt;em>fantastic&lt;/em>. Absent org-mode, and assuming I were still a suit, and assuming MS did not screw up OneNote, and assuming MS OneNote were the only good enough game in town, you might have even stood a sliver of a chance to convince today-me to turn a blind eye to the horrible inhumane spyware that Windows is today &lt;em>because&lt;/em> it also has OneNote. But of course, I would probably have rather suffered the ignominy of paying Apple an arm a leg and one&amp;rsquo;s personal liberty for access to their increasingly walled-in walled gardens, if their MS Office package had a good enough OneNote. Come on MS! Why undo the wonderful accessibility work y&amp;rsquo;all are doing on the one hand, by allowing customer data to be weaponised for ads or &amp;ldquo;personalisation&amp;rdquo; or whatever? Anyway, I&amp;rsquo;m grateful for Linux. Both those other ships have sailed for me. Now if only NVIDIA stopped being such insufferable asses about those graphics drivers. Yeah, there is no pleasing some people.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>I wish they would take a lesson from the late great &lt;a href="https://en.wikipedia.org/wiki/Space-cadet%5Fkeyboard">Space Cadet&lt;/a> keyboard. Once I saw that, I couldn&amp;rsquo;t un-see it. Ever since I always reconfigure keyboard layouts of my computers, to put CTRL (and META / ALT) under our thumbs, the way the Spirits of the Computer intended.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>The vast majority of Emacs users are gentlenerds. Alas, odds are that the crabby trollish subset will project out of the ether into your browser window schooling you about How You Are Doing It All Wrong By Using The Mouse. Smile and close the browser tab. Allow them to rail into the void. You do you.&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>Ref: &lt;a href="https://www.youtube.com/watch?v=oJTwQvgfgMM">Emacs Org-mode - a system for note-taking and project planning&lt;/a> by Carsten Dominik, the inventor of org-mode. The video was curated by TV Raman, a blind-since-childhood programmer, who uses org-mode and who also created &amp;ldquo;Emacspeak&amp;rdquo; - Emacs for the Blind. For the more fortunate of us, though some Emacs default settings are weird, and though much of the language to explain Emacs is annoyingly crufty and old, it may be worth adapting to the oddities. Honestly, one doesn&amp;rsquo;t need to learn much to derive use out of Emacs org-mode. That said, if you want all the familiarity of your Mouse and keyboard shortcuts, then by all means configure Emacs to fit your needs. That is its forte! Many &amp;ldquo;starter kits&amp;rdquo; are available, to remove the burden of figuring out how to do so. &lt;a href="https://github.com/corvideon/mousemacs">mousemacs&lt;/a> seems to be quite nice. Hit me up if you need help setting it up (&lt;em>weblog&lt;/em> at this site)!&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content></item><item><title>shite: static sites from shell: part 1/2</title><link>/posts/shite-the-static-sites-from-shell-part-1/</link><pubDate>Tue, 08 Mar 2022 01:29:08 +0530</pubDate><guid>/posts/shite-the-static-sites-from-shell-part-1/</guid><description>&lt;p>This primer is for people like me, who long dreamed of lovingly hand-crafting
our own home on the Internet. We would make it ultramodern yet ultralight,
simple yet beautiful. Something &lt;em>not&lt;/em> WordPress because that&amp;rsquo;s so last century.
(Seriously, just go to WordPress.)&lt;/p>
&lt;p>No. We were committed. We would do it for the sake of craftsmanship and the
environment and World Peace. And that&amp;rsquo;s how we found ourselves awake at 2 A.M.,
having absurd conversations &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> with Distant Internet Strangers&amp;hellip;&lt;/p></description><content>&lt;p>This primer is for people like me, who long dreamed of lovingly hand-crafting
our own home on the Internet. We would make it ultramodern yet ultralight,
simple yet beautiful. Something &lt;em>not&lt;/em> WordPress because that&amp;rsquo;s so last century.
(Seriously, just go to WordPress.)&lt;/p>
&lt;p>No. We were committed. We would do it for the sake of craftsmanship and the
environment and World Peace. And that&amp;rsquo;s how we found ourselves awake at 2 A.M.,
having absurd conversations &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> with Distant Internet Strangers&amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>You (loudly): &lt;em>&amp;ldquo;BOOTSTRAP? Yes, I want to bootstrap my website.&amp;quot;&lt;/em>&lt;/p>
&lt;p>D.I.S. (miming): &lt;em>&amp;ldquo;No, no. You. &lt;strong>Need.&lt;/strong> Bootstrap.&amp;quot;&lt;/em>&lt;/p>
&lt;p>You: &amp;ldquo;&lt;em>I whaaat?&lt;/em>&amp;rdquo;&lt;/p>
&lt;p>D.I.S.: &lt;em>&amp;rdquo;&amp;hellip; aaannd NODE JAY ESS too&amp;hellip;&amp;quot;&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>You can&amp;rsquo;t fathom &lt;em>why&lt;/em> there are a jillion &amp;ldquo;CMSes&amp;rdquo;, fifty &amp;ldquo;build tools&amp;rdquo;, and
nine dozen &amp;ldquo;static site generators&amp;rdquo;, each with their own bespoke &amp;ldquo;templating
system&amp;rdquo;.&lt;/p>
&lt;p>You are &lt;em>this close&lt;/em> to DM-ing the first person who green-dots in your
current Slack; &amp;ldquo;&lt;em>Please, can you help me?&lt;/em> I didn&amp;rsquo;t know. I&amp;rsquo;m so sorry. For
&lt;em>everything&lt;/em>. I just wanted a website&amp;hellip; &lt;em>Please???&lt;/em>.&amp;rdquo;.&lt;/p>
&lt;p>Okay, then&amp;hellip;&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#screw-that-gimme-a-site-already">&amp;ldquo;Screw that, gimme a site already&amp;rdquo;&lt;/a>&lt;/li>
&lt;li>&lt;a href="#what-s-the-plan">What&amp;rsquo;s the plan?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#what-is-a-static-website">What is a static website?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#hello-world-dot">Hello, world.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#peeking-under-the-browser-s-hood">Peeking under the browser&amp;rsquo;s hood&lt;/a>&lt;/li>
&lt;li>&lt;a href="#the-hello-world-is-not-enough">The hello-world is not enough&lt;/a>&lt;/li>
&lt;li>&lt;a href="#harness-html-dot-energy-to-model-our-would-be-site">Harness html.energy to model our would-be site&lt;/a>&lt;/li>
&lt;li>&lt;a href="#flip-the-model-into-a-full-website">Flip the model into a full website&lt;/a>&lt;/li>
&lt;li>&lt;a href="#what-next">What next?&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;hr>
&lt;h2 id="screw-that-gimme-a-site-already">&amp;ldquo;Screw that, gimme a site already&amp;rdquo;&lt;/h2>
&lt;p>Certainly!&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;em>&lt;strong>&lt;a href="demo-2/index.html">site template&lt;/a>&lt;/strong>, hand-rolled and infused with pure html.energy&lt;/em>.
Just save each page and use any text editor to modify it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>&lt;strong>&lt;a href="https://github.com/adityaathalye/shite">shite&lt;/a>&lt;/strong>, the tiny static site builder from shell.&lt;/em>
When the copy-pasta gets too much, a tiny Shell script can go a long way.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>TL;DR? Copy, use, modify at will.&lt;/p>
&lt;p>L;R? Follow me and I&amp;rsquo;ll show you how deep the rabbit hole goes.&lt;/p>
&lt;figure class="left" >
&lt;img src="morpheus-red-blue-pill.jpg" />
&lt;/figure>
&lt;h2 id="what-s-the-plan">What&amp;rsquo;s the plan?&lt;/h2>
&lt;p>To your credit, you will struggle and muddle and slap together a reasonable
site. I know I did. But you may also feel uneasy about the magic you used.
I know I did.&lt;/p>
&lt;p>Not today, though. Today we simplify, demystify, flow effortlessly, and end
up with&amp;hellip;&lt;/p>
&lt;p>Part 1: This blog:&lt;/p>
&lt;ul>
&lt;li>devise a decent, dead-simple HTML page template that you can fully grok,
and copy away to website success&lt;/li>
&lt;/ul>
&lt;p>Part 2: Next blog:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>grasp the problem space of making a static website (or, a website),&lt;/p>
&lt;/li>
&lt;li>
&lt;p>make &lt;em>shite: the website generator from Shell&lt;/em>, to automate the boring parts,&lt;/p>
&lt;/li>
&lt;li>
&lt;p>do nothing that will surprise a Perl/PHP gentleperson hacker from the last
century. &amp;lsquo;twas a far more civilized time &lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. I know because I&amp;rsquo;m from
the last century.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;em>&amp;ldquo;Be water, my friend.&amp;quot;&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Bruce Lee.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="what-is-a-static-website">What is a static website?&lt;/h2>
&lt;p>Static simply means &lt;em>as-is&lt;/em>. Its inverse is &amp;ldquo;dynamic&amp;rdquo;, meaning in-transit.
The &amp;ldquo;static&amp;rdquo; part of &amp;ldquo;static website&amp;rdquo; corresponds to stored information. The
&amp;ldquo;website&amp;rdquo; part corresponds to where from and &lt;em>how&lt;/em>, the information gets to
one&amp;rsquo;s computer. A web-site is literally a place (site) on the World Wide Web,
whence our computer has to fetch the information we want.&lt;/p>
&lt;p>Fetching information, such as a web page, over the Internet is &amp;ldquo;dynamic&amp;rdquo; by
definition. Even just opening a file on your own computer&amp;rsquo;s disk is &amp;ldquo;dynamic&amp;rdquo;.
The very act of reading a digital file, and/or transmitting it, means copying
its bits from one place and showing them in another place &lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>The &lt;em>Ultimate Static Site&lt;/em>, is a file that once written never changes. Thus,
once-received we never have to fetch it again (unless we lose it). Reality
is of course not so simple. But we will work with the &amp;ldquo;static means never
changing&amp;rdquo; mental model, because we can go pretty far with just that.&lt;/p>
&lt;p>We explore the &lt;em>making&lt;/em> of the &amp;ldquo;static&amp;rdquo; part; viz. the web pages. What could
these web pages convey? Well, any collection of words. A blog series.
A resume. A single essay. A tutorial. A presentation. A collection of books.
A portfolio. An artist&amp;rsquo;s statement. Or even a simple &amp;ldquo;Hello, world&amp;rdquo; message.
Your site, you choose!&lt;/p>
&lt;h2 id="hello-world-dot">Hello, world.&lt;/h2>
&lt;p>One of the simplest possible &amp;ldquo;static&amp;rdquo; websites is just a plain old text file
with a &lt;code>.html&lt;/code> file extension. Type a little &amp;lsquo;&lt;em>Hello, world&lt;/em>&amp;rsquo; message into
a text file (in Notepad or some other such text editor). Save it as &lt;em>hello.html&lt;/em>.
Open the file in a browser. Sure enough, we&amp;rsquo;ll see our little piece of text.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">Hello, world! I am @random on Twitter, Insta, FB, and LinkedIn. Look me up!
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If we put hello.html on a web server and have it serve the file as-is, well,
we just published a static website on the Internet.&lt;/p>
&lt;p>Some people enjoy these simple joys of life.&lt;/p>
&lt;p>For example, Adam Kelly &lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>, m&amp;rsquo;colleague from the &lt;a href="./#footer">Recurse Center&lt;/a>
community, thinks their website &lt;a href="https://www.cthulahoops.org/">cthulahoops.org&lt;/a>
is just fine.&lt;/p>
&lt;p>And it is.&lt;/p>
&lt;figure class="left" >
&lt;img src="plain-static-website-cthulahoops.png" />
&lt;figcaption class="center" >Figure 1: Adam "Cthulahoops" Kelly makes you grin with just one line. (Retrieved Thu, 03 March, 2022).&lt;/figcaption>
&lt;/figure>
&lt;p>But you and I want more.&lt;/p>
&lt;h2 id="peeking-under-the-browser-s-hood">Peeking under the browser&amp;rsquo;s hood&lt;/h2>
&lt;p>Right now, let&amp;rsquo;s ignore this &amp;ldquo;server&amp;rdquo; business entirely. The &lt;em>Ultimate Static
Site&lt;/em> is usable from our computer, as-is. So let&amp;rsquo;s focus on the contents of
the site, and a general approach to assembling one.&lt;/p>
&lt;p>Our browser&amp;rsquo;s &amp;ldquo;View source&amp;rdquo; feature provides the first little clue. We see
something more than the plain text we typed into hello.html.&lt;/p>
&lt;p>The text of the &amp;lsquo;&lt;em>Hello, world&lt;/em>&amp;rsquo; message renders as:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
Hello, world! I am @random on Twitter, Insta, FB, and LinkedIn. Look me up!
&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>
&lt;figure class="left" >
&lt;img src="plain-static-website-cthulahoops-view-source.png" />
&lt;figcaption class="center" >Figure 2: Inside Adam's website.&lt;/figcaption>
&lt;/figure>
&lt;p>This immediately suggests a lesson, viz&amp;hellip;&lt;/p>
&lt;h2 id="the-hello-world-is-not-enough">The hello-world is not enough&lt;/h2>
&lt;p>The browser actually needs well-formed Hyper-Text Markup Language (HTML), to
correctly interpret and display content. But browsers also guess at content
type and apply rules to show content as sensibly as possible. In our dead-simple
case, the browser chose to wrap the plain text in the appropriate HTML tags.&lt;/p>
&lt;p>Unfortunately, typing plain text paragraphs into our hello.html file doesn&amp;rsquo;t
cut it because, to a browser, the whole thing is just one text node. It will
flatten the entire text file into single line. Browsers are clever in a very
narrow sense. Also there&amp;rsquo;s the small matter that a web server may refuse to
send HTML that it thinks is incomplete (malformed). So we&amp;rsquo;ll fix that first.&lt;/p>
&lt;p>So the next-simplest evolution of our static site would be to put appropriate
HTML around our text. &lt;code>&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/code> (paragraph) tags for instance, like a civilized
person from the last century would do.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">&amp;lt;p&amp;gt;Hello, world.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;I am @random on Twitter, Insta, FB, and LinkedIn.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;Look me up!&amp;lt;/p&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As before, the browser helpfully enclosed our incomplete html in the document
level tags (html, body).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;Hello, world.&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;I am @random on Twitter, Insta, FB, and LinkedIn.&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;Look me up!&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The browser somehow renders our text as neat paragraphs. That&amp;rsquo;s because it
automatically applies default style information to HTML elements it recognizes.
We can see this in the &amp;ldquo;Styles&amp;rdquo; tab when we &amp;ldquo;view source&amp;rdquo; (in Firefox).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">&lt;span style="color:#f92672">p&lt;/span> {
&lt;span style="color:#66d9ef">display&lt;/span>: &lt;span style="color:#66d9ef">block&lt;/span>;
margin-block-start: &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span>;
margin-block-end: &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span>;
margin-inline-start: &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
margin-inline-end: &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It&amp;rsquo;s not magic. Have a look at the default style sheets to render HTML &lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>:&lt;/p>
&lt;ul>
&lt;li>in the Chromium project: &lt;a href="https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css">core/css/html.css&lt;/a>&lt;/li>
&lt;li>in the Firefox project: &lt;a href="https://searchfox.org/mozilla-central/source/layout/style/res/html.css">layout/style/res/html.css&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>So there it is. In the simplest case, we need only worry about the bare
essential content and HTML formatting, and rely on the browser to supply the
rest; wrapper HTML, and CSS style information.&lt;/p>
&lt;p>Further, even in this crude form, the browser has already planted the seed of
an idea in our minds. If &lt;em>we&lt;/em> supply just the content, &lt;em>something else&lt;/em> could
mechanically add in the boilerplate/repetitive HTML + CSS. A templating system.&lt;/p>
&lt;p>But we&amp;rsquo;re getting ahead of ourselves. If we want browsers to show our content
the way we intended, then we must remove guesswork by wrapping the content in
well-formed HTML syntax.&lt;/p>
&lt;h2 id="harness-html-dot-energy-to-model-our-would-be-site">Harness html.energy to model our would-be site&lt;/h2>
&lt;p>The web is meant to be a publishing medium. HTML, its lingua franca, has become
a highly standardized, feature-rich, and expressive language.&lt;/p>
&lt;p>Modern HTML aims to be &amp;ldquo;semantic&amp;rdquo;, i.e. it allows us to organize and describe
various parts of our website in HTML tags that are well-accepted &lt;strong>and&lt;/strong> machine-
friendly &lt;strong>and&lt;/strong> meaningful to humans. A lot can be done with very little &lt;sup id="fnref:6">&lt;a href="#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>CSS too has evolved a lot. But we will focus more on the HTML bits, because
that&amp;rsquo;s at the heart of all web layouts and we can rely on browsers to supply
reasonable styling information automatically.&lt;/p>
&lt;p>So, we may rifle through the HTML reference page and come up with some sort
of a model of our would-be site.
See the &lt;a href="demo/index.html">live demo&lt;/a> and compare with the markup anatomy
described below.&lt;/p>
&lt;figure class="left" >
&lt;img src="shite-demo-1.png" />
&lt;figcaption class="center" >Figure 3: a model page for the shite&lt;/figcaption>
&lt;/figure>
&lt;p>Note: I used the HTML and CSS I did simply because I picked up a few tricks
after reading half a book. You may do it differently. The important thing is
to construct a &lt;em>good enough model&lt;/em> to help us think.&lt;/p>
&lt;div class="collapsable-code">
&lt;input id="526417938" type="checkbox" checked />
&lt;label for="526417938">
&lt;span class="collapsable-code__language">html&lt;/span>
&lt;span class="collapsable-code__title">Anatomy of the markup&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-html" >&lt;code>
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;!-- Some basic hygiene meta-data --&amp;gt;
&amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;
&amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1&amp;#34;&amp;gt;
&amp;lt;title&amp;gt;A Shtatic Shite&amp;lt;/title&amp;gt;
&amp;lt;meta name=&amp;#34;author&amp;#34; content=&amp;#34;Yours Truly&amp;#34;&amp;gt;
&amp;lt;meta name=&amp;#34;description&amp;#34; content=&amp;#34;In which we work our way to world domination the hard way.&amp;#34;&amp;gt;
&amp;lt;!-- Some bare bones style information. Ignore details, it&amp;#39;s just for show. --&amp;gt;
&amp;lt;!-- Read &amp;lt;https://every-layout.dev&amp;gt; for true CSS enlightenment. --&amp;gt;
&amp;lt;style&amp;gt;
:root {
color: #1a2639;
background-color: #f0ece2;
font-family: sans-serif;
}
,\* {
background-color: lightyellow;
}
a {
color: darkred;
}
body {
_\* Constrain body width. \*_
max-width: 72ch;
_\* Prevent content from sticking to inside edges of body. \*_
padding: 1.5rem;
_\* Position body in the middle of the screen. \*_
margin-top: 1.5rem;
margin-left: auto;
margin-right: auto;
}
nav {
display: flex;
gap: 1rem;
margin-top: 1rem;
margin-bottom: 1rem;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;header id=&amp;#34;site-header&amp;#34;&amp;gt;
&amp;lt;h1&amp;gt;A &amp;#34;Hello, World&amp;#34; website by Yours Truly.&amp;lt;/h1&amp;gt;
&amp;lt;nav&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;a href=&amp;#34;index.html&amp;#34;&amp;gt;Blog&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;a href=&amp;#34;about.html&amp;#34;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;a href=&amp;#34;resume.html&amp;#34;&amp;gt;Resume&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/nav&amp;gt;
&amp;lt;hr&amp;gt;
&amp;lt;/header&amp;gt;
&amp;lt;main&amp;gt;
&amp;lt;h1&amp;gt;Blog posts&amp;lt;/h1&amp;gt;
&amp;lt;article id=&amp;#34;article-hello-world&amp;#34;&amp;gt;
&amp;lt;h2&amp;gt;Hello, world.&amp;lt;/h2&amp;gt;
&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;
In which we greet the world.
&amp;lt;/summary&amp;gt;
&amp;lt;p&amp;gt;Hello, world.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;I&amp;#39;m here.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;And I&amp;#39;m going to take you head-on...&amp;lt;/p&amp;gt;
&amp;lt;nav&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;sub&amp;gt;^ &amp;lt;a href=&amp;#34;#article-hello-world&amp;#34;&amp;gt;title&amp;lt;/a&amp;gt;&amp;lt;/sub&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;sub&amp;gt;^ &amp;lt;a href=&amp;#34;#site-header&amp;#34;&amp;gt;menu&amp;lt;/a&amp;gt;&amp;lt;/sub&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/nav&amp;gt;
&amp;lt;/details&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;article id=&amp;#34;article-wtf-world&amp;#34;&amp;gt;
&amp;lt;h2&amp;gt;Wtf, world?!&amp;lt;/h2&amp;gt;
&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;
In which we marvel at the various insanties of life and the living.
&amp;lt;/summary&amp;gt;
&amp;lt;p&amp;gt;Wtf, world.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;I&amp;#39;m here.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;And I&amp;#39;m just... How do you even work?&amp;lt;/p&amp;gt;
&amp;lt;nav&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;sub&amp;gt;^ &amp;lt;a href=&amp;#34;#article-hello-world&amp;#34;&amp;gt;title&amp;lt;/a&amp;gt;&amp;lt;/sub&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;sub&amp;gt;^ &amp;lt;a href=&amp;#34;#site-header&amp;#34;&amp;gt;menu&amp;lt;/a&amp;gt;&amp;lt;/sub&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/nav&amp;gt;
&amp;lt;/details&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;article id=&amp;#34;article-goodbye-world&amp;#34;&amp;gt;
&amp;lt;h2&amp;gt;Goodybe, world.&amp;lt;/h2&amp;gt;
&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;
In which we bid adieu to the world.
&amp;lt;/summary&amp;gt;
&amp;lt;p&amp;gt;Goodbye, world.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;It was nice being here.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;I hope we meet again...&amp;lt;/p&amp;gt;
&amp;lt;nav&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;sub&amp;gt;^ &amp;lt;a href=&amp;#34;#article-goodbye-world&amp;#34;&amp;gt;title&amp;lt;/a&amp;gt;&amp;lt;/sub&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;sub&amp;gt;^ &amp;lt;a href=&amp;#34;#site-header&amp;#34;&amp;gt;menu&amp;lt;/a&amp;gt;&amp;lt;/sub&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/nav&amp;gt;
&amp;lt;/details&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;/main&amp;gt;
&amp;lt;footer&amp;gt;
&amp;lt;hr&amp;gt;
&amp;lt;p&amp;gt;Copyright, Yours Truly.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;All content is MIT licensed, except where specified otherwise.&amp;lt;/p&amp;gt;
&amp;lt;/footer&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>Our model already contains much html.energy. We&amp;rsquo;re almost done.&lt;/p>
&lt;h2 id="flip-the-model-into-a-full-website">Flip the model into a full website&lt;/h2>
&lt;p>In all honesty, the above structure could serve you well for many blog posts
and pages. You can just copy-paste the HTML and modify the content, styles,
meta &amp;mdash;anything, really&amp;mdash; to create new pages.&lt;/p>
&lt;p>Like this &lt;a href="demo-2/index.html">other live demo&lt;/a>.&lt;/p>
&lt;p>See? Cute, right? (Fine, I also made &lt;em>just one&lt;/em> little tweak for colour effect.
I couldn&amp;rsquo;t help it, OK?).&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;img src="shite-demo-2-index.png" alt="">&lt;/td>
&lt;td>&lt;img src="shite-demo-2-about.png" alt="">&lt;/td>
&lt;td>&lt;img src="shite-demo-2-resume.png" alt="">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="what-next">What next?&lt;/h2>
&lt;p>Well, you can&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>write a pleasantly styled private diary that lives just on your computer, or&lt;/li>
&lt;li>email any page, or the whole thing to anyone you like, or&lt;/li>
&lt;li>share the site via dropbox or suchlike, with close friends and family, or&lt;/li>
&lt;li>publish it to the WWW &lt;sup id="fnref:7">&lt;a href="#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup> for all to behold&lt;/li>
&lt;/ul>
&lt;p>But why stop here? I wish you and your site grow ever richer. And why stop
at one? I wish your ambition grows to make many sites of all shapes and sizes.&lt;/p>
&lt;p>Either way, may the copy pasta stop being cute very fast. May it cause you
to seek ways to automate away the tedious bits of site-building. Because it&amp;rsquo;s
too much fun!&lt;/p>
&lt;p>In next and concluding part, I draw a blueprint you could crib from, should
you choose this virtuous adventure in artisanal automation. Something dead-simple.
That you &lt;em>fully&lt;/em> grok. That you can change at will. That is therefore timeless.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Even Joe Armstrong &lt;a href="https://www.youtube.com/watch?v=lKXe3HUG2l4">gave up after &amp;ldquo;the local Grunt&amp;rdquo; wouldn&amp;rsquo;t work&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>Recently, a friend told me matter-of-fact-ly that they know people who were spinning up a Kubernetes cluster for their static website. For scale and all, you know. (If you don&amp;rsquo;t know what any of that means, it&amp;rsquo;s fine. I don&amp;rsquo;t either.)&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://wesleyac.com/">Wesley A-C.&lt;/a>, m&amp;rsquo;colleague from the Recurse Center community, has more to say about the &lt;a href="https://blog.wesleyac.com/posts/no-static-websites">static/dynamic divide&lt;/a>.&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>Thanks to &lt;a href="https://github.com/cthulahoops">Adam Kelly&lt;/a>, for permission to use their site as example.&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>Someone on the html.energy discord pointed to this truth buried in The Source.&amp;#160;&lt;a href="#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>Visit &lt;a href="https://html.energy/home.html">html.energy&lt;/a> to learn the truth, &lt;a href="https://gossipsweb.net/">gossipsweb&lt;/a> to experience it, and the &lt;a href="https://512kb.club/">512KB Club&lt;/a> to meet the lightweight elite.&amp;#160;&lt;a href="#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:7" role="doc-endnote">
&lt;p>This blog post &lt;a href="https://alignedleft.com/resources/cheap-web-hosting">Cheap or Free Static Website Hosting&lt;/a> suggests several options. The neocities.org way seems easiest for a simple website like ours. You&amp;rsquo;ll also find plenty of help for &lt;a href="https://pages.github.com/">publishing with github pages&lt;/a>. Alternatively, there seems to be a way to publish direct from your Google Drive or Dropbox etc. &lt;a href="https://www.freecodecamp.org/news/how-to-deploy-a-static-website-for-free-in-only-3-minutes-with-google-drive/">using Fast.io&lt;/a>.&amp;#160;&lt;a href="#fnref:7" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content></item><item><title>In the beginning, was the domain name</title><link>/posts/hello-world/</link><pubDate>Wed, 10 Nov 2021 00:00:00 +0530</pubDate><guid>/posts/hello-world/</guid><description>&lt;p>How this blog came to be is a minor miracle. Long story short, I conned myself
into believing nobody will find &lt;em>and&lt;/em> read it. But you&amp;rsquo;re here, aren&amp;rsquo;t you?
And you&amp;rsquo;re reading this. Aren&amp;rsquo;t You?&lt;/p>
&lt;p>Confucamus.&lt;/p>
&lt;p>Well, here&amp;rsquo;s how you got here.&lt;/p></description><content>&lt;p>How this blog came to be is a minor miracle. Long story short, I conned myself
into believing nobody will find &lt;em>and&lt;/em> read it. But you&amp;rsquo;re here, aren&amp;rsquo;t you?
And you&amp;rsquo;re reading this. Aren&amp;rsquo;t You?&lt;/p>
&lt;p>Confucamus.&lt;/p>
&lt;p>Well, here&amp;rsquo;s how you got here.&lt;/p>
&lt;hr>
&lt;p>You see, I&amp;rsquo;ve been&amp;hellip; was&amp;hellip; e-sober for a measurable fraction of the
Internet era.&lt;/p>
&lt;p>It&amp;rsquo;s been over ten years since I took down my last (and first) blog. Eight
since I nuked my FB with extreme prejudice, discovering in the bargain a fine
capacity for smug satisfaction, when the chagrin of aghast friends and sundry
affected me not one whit. Nary a tweet-song has erupted, five years and
counting.&lt;/p>
&lt;p>The WWW had gotten A Bit Too Much. I wanted to say nothin' to nobody on it.
I was content writing the occasional long email to friends and randoms.
I was &lt;em>fine&lt;/em>. &lt;em>Everything was.&lt;/em>&lt;/p>
&lt;p>Mother nature, though. She tests us.&lt;/p>
&lt;p>Predictably, she sprung A Rather Big Surprise at the least-convenient moment
in the least-convenient century (for me, at any rate).
That-which-shall-not-be-named imposed a period of involuntary house arrest.&lt;/p>
&lt;p>It was then, in that long dark tea time of the soul, will weakened, that I
snagged a domain on impulse.&lt;/p>
&lt;p>This very domain. Just for my email, mind you. To de-google myself. Or something.&lt;/p>
&lt;p>Oh, how little did I know. &lt;a href="http://garann.com/dev/2013/how-to-blog-about-code-and-give-zero-fucks/">Insidious&lt;/a> &lt;a href="https://sites.google.com/site/steveyegge2/you-should-write-blogs">thoughts&lt;/a> &lt;a href="https://applieddivinitystudies.com/2020/09/09/journaling/">started&lt;/a> invading my consciousness
through my soothingly red-shifted displays. The Feature Creep crept up slowly,
subtly erecting neon hoardings to subvert the fog my mind had gladly embraced.
&lt;em>&amp;ldquo;Does your domain apologetically redirect to your github?&amp;rdquo;.&lt;/em>
&lt;em>&amp;ldquo;Your site can be more. Do more. So much more.&amp;rdquo;.&lt;/em>
&lt;em>&amp;ldquo;If a reader fell upon this site and no form was around to comment in,
did they make a sound?&amp;rdquo;.&lt;/em>
Foggy the mind was, yes.&lt;/p>
&lt;p>That&amp;rsquo;s when it gripped me. The desire to write. And it started gnawing away
inside. It was all The Feature Creep&amp;rsquo;s doing, of course, but I didn&amp;rsquo;t know
it then.&lt;/p>
&lt;p>Luckily, my terror of looking like an idiot&amp;ndash;nay, an &lt;em>impostor&lt;/em>&amp;ndash;was far more
potent than The FC&amp;rsquo;s gnawing at my anemic will. I narrowly avoided working up
the nerve to just point the damn domain to Wordpress and slam publish like it
was 2005 again.&lt;/p>
&lt;p>Days turned to weeks. Weeks glommed into months. Some uncalled for hair loss
occurred and a year passed. Meanwhile, the domain redirected reliably,
unaware of the mayhem within and without.&lt;/p>
&lt;p>Still The FC gnawed on. The Feature Creep never tires, never lies down, and
never dies, you see.&lt;/p>
&lt;p>Slyly (or so I thought), I fooled it by quietly typing into my Emacs. More
days turned to weeks turned to months. Words accreted in my org-mode files.
Wee notes. Snippets. Factoids squirreled away. Mostly harmless bits and bobs.
Someone paying attention might have smelled trouble brewing and stopped right
there. But, oh how little did I know.&lt;/p>
&lt;p>Unwittingly, I started penning lofty thoughts too. I caught on soon enough,
but I kept doing it, despite now being acutely aware that I&amp;rsquo;d wake up feeling
dirty the morning after. My confidence, though. My, did it grow supreme. It
took perverse delight in jotting down opinions way above my pay grade because,
after all, nobody would find out. It was all on my computer. Even if I
didn&amp;rsquo;t &lt;em>shred&lt;/em> it all, bitrot would certainly destroy every last trace of
my misadventures. And I&amp;rsquo;d safely take my little secret life to my grave.
Yes, I&amp;rsquo;d get away with it.&lt;/p>
&lt;p>But then my partner found out and started telling me things, whispering words
of encouragement (somehow, &lt;em>&amp;ldquo;egged on&amp;rdquo;&lt;/em> seems more apt).
The fault is all mine though; why we&amp;rsquo;re here. For shortly after, in a
momentary lapse of judgment, I also told a friend.
And then, fatally, I failed to continue keeping mum before other friends.
Now they want to read it all, and not privately, but &amp;ldquo;on your bloody blog,
dummy&amp;rdquo;. That&amp;rsquo;s when I &lt;em>knew&lt;/em>. The Feature Creep had me dead to rights
from the get go.&lt;/p>
&lt;p>The obvious moral here is if you want to continue &lt;em>not&lt;/em> writing on the WWW,
don&amp;rsquo;t under &lt;em>any&lt;/em> circumstance impulse-purchase that domain, and if you do,
don&amp;rsquo;t secretly type in your computer, and if you do, for the love of your Gods,
don&amp;rsquo;t wed or befriend anyone.&lt;/p>
&lt;p>Anyhow, it was too late for me. Feeling suitably cornered and wretched,
much moping around ensued, until it hit me; &amp;ldquo;Wait a minute, I &lt;em>am&lt;/em> an idiot,
but I also &lt;em>want&lt;/em> to be &lt;a href="https://danluu.com/look-stupid/">less of one&lt;/a>.&amp;rdquo;
So this is&amp;hellip; also fine. Maybe they will even tell me HowTo Not Idiot, if
they&amp;rsquo;re still here, reading.&lt;/p>
&lt;p>So I submitted. That domain I impulse-bought stopped redirecting, pointing
to this instead. Then with infinite improbability, your browser pointed to
that and served this up. And now you know exactly how you got here. And&amp;hellip;&lt;/p>
&lt;p>You&amp;rsquo;re still reading, aren&amp;rsquo;t you?&lt;/p>
&lt;p>Your readership graces this site. To me, writing was thinking. Apparently it
can also be a process of becoming. So thank you for being here (bows deeply).
Several word collections are in progress. Please stay as long as you wish.&lt;/p>
&lt;p>I&amp;rsquo;ll pause here to doff my hat to some heroes that I draw inspiration from;
&lt;a href="https://bellmar.medium.com/">bellmar&lt;/a> &amp;amp; &lt;a href="https://danluu.com">danluu&lt;/a> &amp;amp; &lt;a href="https://jvns.ca/">b0rk&lt;/a> &amp;amp; &lt;a href="https://www.gwern.net/index">gwern&lt;/a> &amp;amp; &lt;a href="https://aphyr.com/tags/writing">aphyr&lt;/a> &amp;amp; &lt;a href="https://www.kitchensoap.com/">allspaw&lt;/a> &amp;amp; &lt;a href="https://xkcd.com/">randall&lt;/a> &amp;amp; &lt;a href="https://twitter.com/foone">foone&lt;/a>,
and a hundred more&amp;hellip; Much to learn, have I.
But we here now, an' we gon' try. We gon' try, to eval/apply.&lt;/p>
&lt;p>There will be some technical words, some code play, some HowTos, some WhyTos,
pondering-upons of some real doozies like &amp;ldquo;Systems, Scale, Value&amp;rdquo;,
&amp;ldquo;Technical Debt is a CDO&amp;rdquo;, &amp;ldquo;Envelope of control&amp;rdquo;, &amp;ldquo;Why was the misbehaving
system behaving itself?&amp;rdquo; and so forth. No pundering at all, if you&amp;rsquo;re
wondering.&lt;/p>
&lt;p>Enroute, maybe your eye catches something iffy and twitches. Perhaps a whiff
of bull causes your nostrils to flare slightly. Maybe something really gets
your goose and your brain screams &amp;ldquo;NO. Don&amp;rsquo;t. Type. You &lt;strong>promised&lt;/strong> you&amp;rsquo;re
done with these Internet randos who are SO BLOODY WRONG.&amp;rdquo;.&lt;/p>
&lt;p>That&amp;rsquo;s why I&amp;rsquo;m helping you by not having a comment form.&lt;/p>
&lt;p>But I&amp;rsquo;ll be delighted to hear from you at &lt;em>weblog (at) evalapply (dot) org&lt;/em>
if it strikes your fancy! (Or &lt;em>youresobloodywrong (at) evalapply (dot) org&lt;/em>
if it&amp;rsquo;s just &lt;em>that&lt;/em> kind of a day and you can&amp;rsquo;t stand it any more.
I know the feeling. I&amp;rsquo;m here, listening :).&lt;/p>
&lt;p>Thank you for swinging by!&lt;/p>
&lt;p>&lt;a href="https://xkcd.com/386/">&lt;img src="https://imgs.xkcd.com/comics/duty%5Fcalls.png" alt="What do you want me to do? LEAVE? Then they&amp;rsquo;ll keep being wrong!">&lt;/a>
&lt;a href="https://xkcd.com/386/">xkcd: Duty Calls&lt;/a>&lt;/p></content></item></channel></rss>