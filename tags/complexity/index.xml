<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>complexity on eval/apply</title><link>/tags/complexity/</link><description>Recent content in complexity on eval/apply</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 19 Jan 2022 01:55:37 +0530</lastBuildDate><atom:link href="/tags/complexity/index.xml" rel="self" type="application/rss+xml"/><item><title>Technical Debt is really Software Debt. And it's a AAA-rated CDO.</title><link>/posts/software-debt/</link><pubDate>Wed, 19 Jan 2022 01:55:37 +0530</pubDate><guid>/posts/software-debt/</guid><description>&lt;p>I&amp;rsquo;ve long struggled with the &lt;em>Technical Debt&lt;/em> metaphor. It was immediately
useful when I first heard it. I still think it is useful, albeit as a starting
point. The more I worked with software, the more infuriatingly incomplete it
started to feel.&lt;/p>
&lt;p>Some years ago I found myself in a rabbit hole, researching the 2008 financial
crisis. It reminded me of other insane stories like Knight Capital, and farther
back, about how Enron imploded (because Enron India&amp;rsquo;s meltdown was shocking,
and destructive. And because a dear friend, in his past life, was on the team
at Lehman Bros. that structured financing for Enron India. So come 2008, when
Lehman imploded, I got to hear about the hard-chargin' super-leveraged
risk-takin' days from someone who was there in the early days of the so-called
Dick Fuld era. It was all very fascinating, but I digress&amp;hellip;).&lt;/p>
&lt;p>One source of my unease is that I think discussions of Technical Debt don&amp;rsquo;t
sufficiently examine the nature of the &lt;em>Risk&lt;/em> of the underlying challenge.
The other is that the concept skews and pigeonholes the &lt;em>Responsibility&lt;/em> part
of the underlying challenge.&lt;/p>
&lt;p>Down in the rabbit hole, a slow realization began.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#framing-pigeonholes-responsibility-dot">Framing pigeonholes Responsibility.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-packages-risk-dot-we-need-better-mental-models-of-that-risk-dot">Software debt packages risk. We need better mental models of that risk.&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#software-debt-risk-perception-is-muddied-by-personal-bias-dot">Software debt risk perception is muddied by personal bias.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-rooted-in-complexity-dot-we-abhor-complexity-dot">Software debt is rooted in complexity. We abhor complexity.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-inevitable-dot">Software debt is &lt;em>inevitable&lt;/em>.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-always-compounds-dot">Software debt always &lt;em>compounds&lt;/em>.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-layered-dot">Software debt is &lt;em>layered&lt;/em>.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-networked-dot">Software debt is &lt;em>networked&lt;/em>.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-like-a-complex-opaque-financial-derivative-dot">Software debt is like a complex opaque financial derivative.&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#1-000-words-in-1-picture-xkcd-summarizes-it-best-dot">1,000 words in 1 picture: xkcd summarizes it best.&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;p>Note: In this post, I have software organisations in mind, viz. ones that exist
mainly because of the software they make and ship (whether priced or gratis).&lt;/p></description><content>&lt;p>I&amp;rsquo;ve long struggled with the &lt;em>Technical Debt&lt;/em> metaphor. It was immediately
useful when I first heard it. I still think it is useful, albeit as a starting
point. The more I worked with software, the more infuriatingly incomplete it
started to feel.&lt;/p>
&lt;p>Some years ago I found myself in a rabbit hole, researching the 2008 financial
crisis. It reminded me of other insane stories like Knight Capital, and farther
back, about how Enron imploded (because Enron India&amp;rsquo;s meltdown was shocking,
and destructive. And because a dear friend, in his past life, was on the team
at Lehman Bros. that structured financing for Enron India. So come 2008, when
Lehman imploded, I got to hear about the hard-chargin' super-leveraged
risk-takin' days from someone who was there in the early days of the so-called
Dick Fuld era. It was all very fascinating, but I digress&amp;hellip;).&lt;/p>
&lt;p>One source of my unease is that I think discussions of Technical Debt don&amp;rsquo;t
sufficiently examine the nature of the &lt;em>Risk&lt;/em> of the underlying challenge.
The other is that the concept skews and pigeonholes the &lt;em>Responsibility&lt;/em> part
of the underlying challenge.&lt;/p>
&lt;p>Down in the rabbit hole, a slow realization began.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#framing-pigeonholes-responsibility-dot">Framing pigeonholes Responsibility.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-packages-risk-dot-we-need-better-mental-models-of-that-risk-dot">Software debt packages risk. We need better mental models of that risk.&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#software-debt-risk-perception-is-muddied-by-personal-bias-dot">Software debt risk perception is muddied by personal bias.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-rooted-in-complexity-dot-we-abhor-complexity-dot">Software debt is rooted in complexity. We abhor complexity.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-inevitable-dot">Software debt is &lt;em>inevitable&lt;/em>.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-always-compounds-dot">Software debt always &lt;em>compounds&lt;/em>.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-layered-dot">Software debt is &lt;em>layered&lt;/em>.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-networked-dot">Software debt is &lt;em>networked&lt;/em>.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#software-debt-is-like-a-complex-opaque-financial-derivative-dot">Software debt is like a complex opaque financial derivative.&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#1-000-words-in-1-picture-xkcd-summarizes-it-best-dot">1,000 words in 1 picture: xkcd summarizes it best.&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;p>Note: In this post, I have software organisations in mind, viz. ones that exist
mainly because of the software they make and ship (whether priced or gratis).&lt;/p>
&lt;hr>
&lt;h2 id="framing-pigeonholes-responsibility-dot">Framing pigeonholes Responsibility.&lt;/h2>
&lt;p>I find the &lt;em>Technical&lt;/em> part problematic because it is too narrow a context,
and that narrow framing leads to real trouble in software orgs.&lt;/p>
&lt;p>It inadvertently paints a small set of people as the &amp;ldquo;owners&amp;rdquo; of the &amp;ldquo;debt&amp;rdquo;,
which is not untrue, but it is incomplete, and the framing by its construction
inadvertently places the rest of the organisation in the role of creditor.
The framing further pigeonholes our thinking about risk, and causes us to set
up adversarial objectives and communication structures among the organisation&amp;rsquo;s
many functions and layers.&lt;/p>
&lt;p>Narrow framing is bad because software orgs&amp;ndash;especially fast growing ones&amp;ndash;are
always in a state of churn, conflict internally and with the outside world,
and a state of partial failure. Because a running, live software system is
as much a fermenting vat full of culture, opinion, future-thinky bets with
people constantly dipping in for a taste, as it is bit-flippin' transistors
mindlessly following truth tables.&lt;/p>
&lt;p>We have since invented other terms like &amp;ldquo;organisational&amp;rdquo; debt to prod people
to think more holistically. I prefer to say &amp;ldquo;software debt&amp;rdquo;, and mean it to
apply to the whole of any given software organisation, because of how I have
come to think of the &lt;em>debt&lt;/em> bit of software things (and org things in general).&lt;/p>
&lt;p>Sadly, narrow framing abounds, and we end up producing malfunctioning software
organisations far too frequently.&lt;/p>
&lt;p>And so, far too many learn what it feels like to try and get the big bank to
refinance that home loan when the world suddenly became hostile to them, and
they were too little, too alone, and too powerless to engineer a central
government bail out. The best they (we) can do is to vote for a government
that hopefully reforms policy and simplifies tax regimes and does generally
smart stuff such that more people come out of poverty, fewer sink back into
it, and more people achieve prosperity. Become a &amp;ldquo;Generative&amp;rdquo; type of org,
in terms of Westrum&amp;rsquo;s typology of organisational cultures.&lt;/p>
&lt;p>At the same time, personal responsibility is not waived away. The least we
(they) can do is to not be foolish in the first place. Resist those easy
temptations. Not bite chunks we can&amp;rsquo;t chew. Not eat what we can&amp;rsquo;t digest.&lt;/p>
&lt;p>Say No To (Software) Debts.&lt;/p>
&lt;h2 id="software-debt-packages-risk-dot-we-need-better-mental-models-of-that-risk-dot">Software debt packages risk. We need better mental models of that risk.&lt;/h2>
&lt;p>Within the frame of &amp;ldquo;technical&amp;rdquo; debt, we frequently discuss the &amp;ldquo;debt&amp;rdquo; in terms
of code quality (cleanliness, understandability, efficiency, maintainability),
and architectural quality (the goodness of domain models, core abstractions,
application boundaries and interfaces etc.).&lt;/p>
&lt;p>This is a sort of human indebtedness, as in, are we being kind to each other,
and helping each other be productive? Because if we are productive, then we
will get more done with less effort (leverage), be able to ship more, faster
(throughput), and respond to market needs more creatively (innovate).&lt;/p>
&lt;p>These are undeniably important considerations. But&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>they are certainly not firewalled off from the rest of the organisation.
For example, to a good first-order approximation, we tend to &amp;ldquo;ship our
organisational structure&amp;rdquo;.&lt;/li>
&lt;li>they are second-order outcomes of a more fundamental kind of thinking, viz.
one about risks and associated trade-offs.&lt;/li>
&lt;/ul>
&lt;p>So I think it&amp;rsquo;s worth framing a notion of &lt;em>Software&lt;/em> Debt, to re-scope the
discussion at an organisational level, and to find a better mental model of
the risk packaged by the debt.&lt;/p>
&lt;h3 id="software-debt-risk-perception-is-muddied-by-personal-bias-dot">Software debt risk perception is muddied by personal bias.&lt;/h3>
&lt;p>Part of my unease, and I suspect yours, stems from how the idea of debt is
anchored in our heads.&lt;/p>
&lt;p>We struggle with this bias when pricing things. We sell to our wallet. If we
are used to buying most things for 10 tokens, we balk at the idea that someone
else is fine charging 100 tokens for basically the same things, and that others
are fine&amp;mdash;delighted, even&amp;mdash;to fork over the requested quantity of tokens.&lt;/p>
&lt;p>Likewise, the word &amp;ldquo;debt&amp;rdquo; is strongly anchored to a &lt;!-- raw HTML omitted -->personal&lt;!-- raw HTML omitted --> sense of financial
debt; our &lt;del>credit&lt;/del> loan cards, home loans, equated monthly installments. Small,
familiar ideas. Safe-sounding numbers. A warm feeling absorbed and internalised
through delightfully tempting messages of better lives, buttressed by the
approval of friends and family when we get that car or house or desirable object.&lt;/p>
&lt;p>Given the sheer amount of personal financial debt, our frequency of involvement
with it, and the normalisation of it being &lt;em>fine&lt;/em> to always be indebted to one
or more financiers, I suspect this anchoring bias is widespread. And it clouds
our risk perception when thinking about software debt.&lt;/p>
&lt;h3 id="software-debt-is-rooted-in-complexity-dot-we-abhor-complexity-dot">Software debt is rooted in complexity. We abhor complexity.&lt;/h3>
&lt;p>Complexity is to software what mass is to a rocket; the hard limiting factor of
growth in any dimension you choose to measure (shipping velocity, headcount,
revenue, cash flow, account expansion; anything). This is the sort of thing that
demands tree-recursive, networked thinking we are not good at doing explicitly
and deliberately. Something that our education actively disables by drilling
us to think in simplistic linear terms in which correlation amounts to causation.&lt;/p>
&lt;p>So much so that we have a visceral negative reaction to the self-control and
effort needed to think hard, think deep, and think persistently with focus,
constantly refining, testing, challenging, updating our mental models of reality.
You just had a visceral negative reaction simply by reading this description,
didn&amp;rsquo;t you?&lt;/p>
&lt;h3 id="software-debt-is-inevitable-dot">Software debt is &lt;em>inevitable&lt;/em>.&lt;/h3>
&lt;p>Complexity is inevitable. Thus risk is inevitable. Thus debt is inevitable.&lt;/p>
&lt;p>Like rocket mass, the more we scale it, the more we pack in, and the more we
make it do, the more complexity we accrue. But also like rocket mass, we &lt;em>want&lt;/em>
some kinds of complexity; the kind that is at the heart of wherever it is that
we aim to go. That is, we want to take on essential risks, but ruthlessly
reject non-essential risks.&lt;/p>
&lt;p>This is not easy at all, but it is a critical function of people making software
especially because it is &lt;em>so easy&lt;/em> to create complexity. Put a network between
two single-core computers, and boom, you just made a distributed system fraught
with undecidable problems. Add mutable state to your program, and boom, now
you have to &lt;em>also&lt;/em> remember the past to make sense of the present. Add an extra
CPU thread to your two computers and you have a stateful concurrent/parallel
networked system on you hands. And now you have to think in non-sequential
time about distributed problems with multiple pasts and multiple futures.&lt;/p>
&lt;p>Most of us don&amp;rsquo;t &lt;em>have&lt;/em> to, because we benefit&amp;ndash;often unwittingly&amp;ndash;from &lt;em>very&lt;/em>
generous error budgets and low-impact risks. But make no mistake, &lt;em>someone&lt;/em>
had to, and someone &lt;em>did&lt;/em>, which is why you and I can ride the coat tails of
risk curves all our lives and be paid handsomely for their troubles.&lt;/p>
&lt;h3 id="software-debt-always-compounds-dot">Software debt always &lt;em>compounds&lt;/em>.&lt;/h3>
&lt;p>In simple terms, all debt reduces down to three key components: A principal
amount, a rate of interest, and terms of payment (including repayment period,
cadence etc.). The combination of interest and terms price the risk for both
parties.&lt;/p>
&lt;p>In software terms, we may think of each piece of tech in the stack as raw mass,
adding to the principal amount. The more we add, the more we risk, even if
the rate of interest remains constant. But really, each decision to add or
remove items from &lt;!-- raw HTML omitted -->any&lt;!-- raw HTML omitted --> part of the system changes the principal &lt;em>and&lt;/em> the
rate of interest &lt;em>and&lt;/em> the repayment terms.&lt;/p>
&lt;p>This alone should cause sleepless nights. Compounding debt grows and grows.
Slowly, creepingly at first, and then very fast. And suddenly you lose everything.&lt;/p>
&lt;h3 id="software-debt-is-layered-dot">Software debt is &lt;em>layered&lt;/em>.&lt;/h3>
&lt;p>Because software parts compose into software &amp;ldquo;stacks&amp;rdquo; and hierarchies, and
each part mutates/evolves up and down the towers.&lt;/p>
&lt;p>Say we only ever have a fixed set of software parts&amp;mdash;say one kind of server-
side application, backed by one kind of database, serving one kind of client,
via one kind of server, on one kind of operating system. Sooner or later,
each part is guaranteed to update in-place and/or do more work forcing a
change in their operating environment.&lt;/p>
&lt;p>The database gets more data. The application handles more edge cases. The
server balances more concurrent load. The OS gets security patches. The
clients want to do more so everything accrues more features. On and on,
mutating forever, exhibiting accretion, sedimentation, erosion, and tectonic
uphevals.&lt;/p>
&lt;p>[Add picture of software sedimentation&amp;hellip; clojure.]&lt;/p>
&lt;h3 id="software-debt-is-networked-dot">Software debt is &lt;em>networked&lt;/em>.&lt;/h3>
&lt;p>Because software itself is networked, even inside applications. There are call
graphs, object hierarchies, and effects-at-a-distance. These often interact
in ways that surprise us. Small &lt;em>local&lt;/em> changes can turn into literal chain
reactions of events that have stunningly large impacts on the state of the
physical world we walk in. The meltdown of Knight Capital stands out starkly
as an example of unmitigated, un-hedged software debt.&lt;/p>
&lt;p>It goes way beyond in-app networks, of course, because we have come to depend
on global software supply chains. These are quite unlike logistical supply
chains, as:&lt;/p>
&lt;ul>
&lt;li>they demand almost no capital to participate as creator and/or as consumer,&lt;/li>
&lt;li>they place no barrier on becoming a critical node (aheam, left-pad), and&lt;/li>
&lt;li>they afford no reaction time when things go bad. Failures and compromises
affect the world near-instantaneously, at the speed information travels.&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s insane that we have become habituated to the idea that adding a single
library to one&amp;rsquo;s project can pull in tens or even hundreds of transitive
dependencies, and that&amp;rsquo;s &lt;em>fine&lt;/em>.&lt;/p>
&lt;p>I&amp;rsquo;m writing this in the wake of the aftermath of the disclosure of the log4j
zero-day vulnerability. But this is only a recent example of just one kind
of networked risk.&lt;/p>
&lt;p>With managed services we effectively add one more level to the &lt;em>Inception&lt;/em>
world of our software organisation. We outsource nice big chunks of supply
chain risk management, but we in-source a &lt;em>different&lt;/em> risk of depending
&lt;em>critically&lt;/em> on entities that we do not control and cannot fix if they fail.&lt;/p>
&lt;h3 id="software-debt-is-like-a-complex-opaque-financial-derivative-dot">Software debt is like a complex opaque financial derivative.&lt;/h3>
&lt;p>To me, unchecked creation of software debt is exactly analogous to how the
2008 financial crisis came to be. It was wrought of &amp;ldquo;simple&amp;rdquo; debt packaged
and repackage in inscrutable derivative ways, stacked into towers of debt
where the aggregate collateral backing it looked sound, but which actually
had very shaky foundations which the abstraction obscured. The crazy thing
is, the trouble at the bottom was apparently sitting around in plain sight,
to terrify anybody who cared to literally walk over and look at it. The
current state of our software supply chains look uncomfortably similar,
for example.&lt;/p>
&lt;p>But as it happens, growth forgives all sins. We fall in love with the thrill.
We fail to stay a little paranoid. Our position becomes increasingly leveraged.
The tail risks compound (demand swings, malicious actors, regulatory change,
supply chain exposure, &amp;hellip;), and so do the odds of any one of those risks
exploding in our faces.&lt;/p>
&lt;p>Our system, as in, the integrated networked whole of compute infrastructure,
managed services, libraries, product management, design, operations, sales,
marketing, org strategy start looking like piles of debt obligations. Each
represents part of a promise made to the outside world. And here&amp;rsquo;s the kicker;
our rate of growth is collateral. Small deceleration of growth rates magnify
into large percentage drops of valuation. And since bad news travels further
and faster than good news, the negative bias tends to be stronger. We seldom
gain value as much, or as quickly, as we devalue.&lt;/p>
&lt;p>So, if we are not ruthlessly pragmatic and strategic about software debt,
you and I will keep accruing the &lt;em>bad risk&lt;/em> kind of debt. One day, at the
least convenient time, the world will come a-calling, demanding what we owe.
And if we can&amp;rsquo;t cough it up, it will take everything away. All moments are
least convenient when that happens.&lt;/p>
&lt;p>Much as I dislike all this doom-speak, I have to acknowledge it is material,
and to side with Andy Grove. Only the paranoid survive. And that the only
real hedge we have is the creativity and intelligence of our people.&lt;/p>
&lt;h2 id="1-000-words-in-1-picture-xkcd-summarizes-it-best-dot">1,000 words in 1 picture: xkcd summarizes it best.&lt;/h2>
&lt;p>&lt;img src="https://imgs.xkcd.com/comics/dependency.png" alt="Someday ImageMagick will finally break for good and we&amp;rsquo;ll have a long period of scrambling as we try to reassemble civilization from the rubble.">
&lt;a href="https://xkcd.com/2347">XKCD: Dependency&lt;/a>&lt;/p></content></item><item><title>Scale, Value, Systems</title><link>/posts/systems-scale-value/</link><pubDate>Sat, 13 Nov 2021 00:00:00 +0530</pubDate><guid>/posts/systems-scale-value/</guid><description>&lt;p>Creating things is a delicate endeavour, fraught with peril. People struggle
forward through crazy marketplace and environmental complexities just to get
from one day to the other.&lt;/p>
&lt;p>Yet I can&amp;rsquo;t shake off the feeling that we make it harder for ourselves than
it should be. I&amp;rsquo;ve been trying to work out why. There&amp;rsquo;s a lot to unpack. This
post is a start at thinking about it in public. My thinking is coloured by
working in the tech startup scene for these last few years, and rooted in
a small mistake my parents made bringing me up.&lt;/p>
&lt;p>I&amp;rsquo;m going to amble along a wavy line of thought through Story, Metaphor, Model,
and Example. Please join the noodling-over and ambling-off into tangents.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#story-damaging-the-children">Story: Damaging the children&lt;/a>&lt;/li>
&lt;li>&lt;a href="#archetypes-as-metaphor-a-vogon-and-slartibartfast">Archetypes as Metaphor: A Vogon and Slartibartfast&lt;/a>&lt;/li>
&lt;li>&lt;a href="#model-a-picture-is-worth-a-1-000-points">Model: A picture is worth a 1,000 % points&lt;/a>&lt;/li>
&lt;li>&lt;a href="#example-what-s-cooler-than-10-bn-100-bn-dot">Example: What&amp;rsquo;s cooler than 10 Bn? 100 Bn.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#tying-it-together-dot-trying-it-together">Tying it together. Trying it together?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#food-for-thought">Food for thought&lt;/a>&lt;/li>
&lt;li>&lt;a href="#acknowledgments">Acknowledgments&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted --></description><content>&lt;p>Creating things is a delicate endeavour, fraught with peril. People struggle
forward through crazy marketplace and environmental complexities just to get
from one day to the other.&lt;/p>
&lt;p>Yet I can&amp;rsquo;t shake off the feeling that we make it harder for ourselves than
it should be. I&amp;rsquo;ve been trying to work out why. There&amp;rsquo;s a lot to unpack. This
post is a start at thinking about it in public. My thinking is coloured by
working in the tech startup scene for these last few years, and rooted in
a small mistake my parents made bringing me up.&lt;/p>
&lt;p>I&amp;rsquo;m going to amble along a wavy line of thought through Story, Metaphor, Model,
and Example. Please join the noodling-over and ambling-off into tangents.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#story-damaging-the-children">Story: Damaging the children&lt;/a>&lt;/li>
&lt;li>&lt;a href="#archetypes-as-metaphor-a-vogon-and-slartibartfast">Archetypes as Metaphor: A Vogon and Slartibartfast&lt;/a>&lt;/li>
&lt;li>&lt;a href="#model-a-picture-is-worth-a-1-000-points">Model: A picture is worth a 1,000 % points&lt;/a>&lt;/li>
&lt;li>&lt;a href="#example-what-s-cooler-than-10-bn-100-bn-dot">Example: What&amp;rsquo;s cooler than 10 Bn? 100 Bn.&lt;/a>&lt;/li>
&lt;li>&lt;a href="#tying-it-together-dot-trying-it-together">Tying it together. Trying it together?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#food-for-thought">Food for thought&lt;/a>&lt;/li>
&lt;li>&lt;a href="#acknowledgments">Acknowledgments&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;hr>
&lt;h2 id="story-damaging-the-children">Story: Damaging the children&lt;/h2>
&lt;p>My parents are deeply systems-oriented thinkers &lt;em>and&lt;/em> doers. Biased to
thoughtful execution; whether short-or-long-range. Connoisseurs of checklists.&lt;/p>
&lt;p>They&amp;rsquo;ve done it all, and then some, with their systems-oriented minds&amp;hellip;
Buying a car, planning a wedding, building warships, running schools and R&amp;amp;D
institutes, organizing large events, helping feed stranded migrant workers,
producing textbooks, caring for their elderly and infirm, helping their
network build lives, teaching their children independence. And I gleefully
imagine, also some top-secret classified stuff my dad can&amp;rsquo;t tell me about,
because then he would have to kill me. (Kid-me read too many spy novels :)).&lt;/p>
&lt;p>At the big-picture level, in this household, keeping an up-to-date &amp;ldquo;death file&amp;rdquo;
is not morbid or fatalist, but a simple plan for &lt;em>after the inevitable&lt;/em>. An
act of care and kindness. At the microscopic level, I cannot recall a single
day growing up, going without a fresh hot meal on the table whether my mom was
home, or away, or sick. Together, they seemingly never missed a beat even against
steep odds, or even if one of them was failing, or was out of commission. And
here I am, barely keeping it together. Apples do fall far from trees.&lt;/p>
&lt;p>They never made the mistake of coddling us, but they did err by wiring us&amp;ndash;my
sibling and I&amp;ndash;with &lt;em>standards&lt;/em> for our actions and output. They failed to stop
at ethical conduct, kindness, and good manners. We had to also pay attention
to detail. Run what-if scenarios. Write things down. Be accountable to our
surroundings and the people in there. Own our successes and failures. In several
cases they had to push us (teenagers gonna teenage). In many others they led
by example.&lt;/p>
&lt;p>They also erred by letting us rifle through Daddy&amp;rsquo;s Awesome Cabinet of Books
and letting us borrow action-packed thrillers like &amp;ldquo;How Things Work&amp;rdquo; (Volumes 1
&lt;em>and&lt;/em> 2), and &amp;ldquo;Systems in Action&amp;rdquo;. Maybe my sibling was spared, I don&amp;rsquo;t know.
I certainly wasn&amp;rsquo;t. You&amp;rsquo;re a boy. And you worship your dad. And you want to be
like him. So damn straight you will devour daddy&amp;rsquo;s books. But you&amp;rsquo;re an 8th
grader, and can&amp;rsquo;t know better. To what extent that material might infiltrate
your brain. And the many ways that influence will &lt;em>mess you up&lt;/em> in adult life.&lt;/p>
&lt;p>To be clear, I adore my parents, but I don&amp;rsquo;t mean to gloat about some superior
upbringing. Traditional societies have been bringing up their young sensitised
to cause/effect, feedback loops, and the interconnected of all things for
millennia. My chance mental conditioning merely has different set and setting.&lt;/p>
&lt;p>Nor am I advocating the merits of my superior mammalian brain. We are all
monkeys. We absorb a tremendous amount by osmosis and proximity. I simply
was (am) around them and they are a certain kind of people. So, monkey see,
monkey do, monkey programmed for life.&lt;/p>
&lt;p>Remember this for later.&lt;/p>
&lt;h2 id="archetypes-as-metaphor-a-vogon-and-slartibartfast">Archetypes as Metaphor: A Vogon and Slartibartfast&lt;/h2>
&lt;p>Unfortunately, enterprise demise is rarely merciful.&lt;/p>
&lt;p>Even the best systems-oriented organisations can fail through mistakes or
forces outside their control. Systems-disoriented ones, though, are almost
certain to end. The best case end-state is a mercifully swift death. The
worst case is akin to eternal hell.&lt;/p>
&lt;p>It is easy to spot hellish organisations. They are ones who mistook bureaucracy
for systems. They erect tall barb-wire fences of paperwork and procedure (and
of actual barb-wire, too, come to think of it). They make Byzantine mazes of
confounding rules and approvals. Elaborate rituals with no memory of why.
Their customers puzzle through the madness. Their staff dutifully tend to these,
because that&amp;rsquo;s what procedure, fences, and mazes are for, after all; to be
tended to, ritually.&lt;/p>
&lt;p>Unfortunately, bureaucracies frequently succeed and turn pathological.&lt;/p>
&lt;p>Bureaucracies are the ones that successfully pulled off the reality-escape
magic trick of turning into axiomatic self-perpetuating ever-expanding entities.
And they are frequently pathological. They exist because they exist. They make
rules because they make rules. They don&amp;rsquo;t grow, they metastasise. Vogons.&lt;/p>
&lt;p>Unfortunately, systems people look like bureaucrats at first glance.&lt;/p>
&lt;p>It is often hard to understand, or indeed believe, what these so-called systems
people are going on about. They appear to be infuriatingly reluctant to
&lt;em>just do&lt;/em> stuff. They want us to think of this feedback loop and that delay
and the other thing&amp;mdash;reservoir something. They ask too many questions and
engage in that perversion of holism which our education weaned us off long ago.&lt;/p>
&lt;p>Unfortunately, consummate bureaucrats are camouflage experts.&lt;/p>
&lt;p>They don the colours of systems-builders (it makes for great press, and randomly
it can actually become true through no fault of said consummate bureaucrat).
But really it is all in service of the pathological bureaucracy that kowtows
the whims of some great dictator high above. The consummate &lt;em>and&lt;/em> competent
bureaucrat is an endangered animal.&lt;/p>
&lt;p>How, pray tell, is the hapless commoner to discern the master of Machiavellian
machinations, from the grappler of vexing problems of far-reaching import?
One who sees through the Eye of Sauron versus one who has vision? One who is
capable of thinking &lt;strong>and&lt;/strong> of creating?&lt;/p>
&lt;p>When suddenly confronted with an alive, organic whole wrought of systems
harmonised of systems, we can be forgiven for getting lost in a single detail
amidst infinite splendour. Like Arthur Dent trying to comprehend the copy of
Earth suspended before him, and finally finding succour in a familiar cup of
tea in his own replicated home. &amp;ldquo;Amazed and lost&amp;rdquo; is quite unlike &amp;ldquo;lost in a
maze&amp;rdquo;. The systems-builder, meanwhile, looks on with kind empathy for our
sudden loss of tongue. Silently joyous about what was realized through them.
Slartibartfast. Now you&amp;rsquo;re gagging aren&amp;rsquo;t you? Not at the name, but at the
Utopian idealism of this whole paragraph? Stay with the feeling. That&amp;rsquo;s your
prickly adult conditioning suppressing your intelligent, curious 13-year-old
inner self.&lt;/p>
&lt;p>A Vogon&amp;rsquo;s employer and A Slartibartfast&amp;rsquo;s employer both produce and perpetuate
grand structures, intricately patterned, with unfathomable puzzles and games
of life that could keep us occupied forever, and perhaps even drive us to
insanity. Yet one is a simulacrum of the other.&lt;/p>
&lt;p>With reference to &lt;em>Westrum typology&lt;/em>, the Vogon Empire would be a Pathological
Bureaucracy. So lets just say that if I were fated to go stark raving mad,
and I had to choose between these opposite archetypes, I&amp;rsquo;d rather lose my
mind working for a Slartibartfast. And if you find yourself under a Vogon&amp;hellip;&lt;/p>
&lt;p>Do Panic.&lt;/p>
&lt;h2 id="model-a-picture-is-worth-a-1-000-points">Model: A picture is worth a 1,000 % points&lt;/h2>
&lt;p>&lt;em>Scale&lt;/em> is where it&amp;rsquo;s at, these days. It so obviously &lt;em>right&lt;/em> to &lt;em>want&lt;/em> to
&lt;em>scale&lt;/em> all the things all the time.&lt;/p>
&lt;p>Try to loudly diss &amp;ldquo;scaling&amp;rdquo;. See if you don&amp;rsquo;t get funny looks and wry remarks
about &amp;ldquo;lifestyle business&amp;rdquo; or something appropriately classifying. Luckily,
that&amp;rsquo;s not what I&amp;rsquo;m going to do today. Also this is the last time fish,
reptiles, dermatology, or the insides of boilers will appear in this piece.
Business thinks of scaling as growing bigger &lt;!-- raw HTML omitted -->and&lt;!-- raw HTML omitted --> doing so faster. And we
mean business here, okay?&lt;/p>
&lt;p>But we&amp;rsquo;re in a spot of trouble, aren&amp;rsquo;t we? The word &lt;em>fucked&lt;/em> comes to mind.&lt;/p>
&lt;p>&amp;ldquo;Systems&amp;rdquo;, &amp;ldquo;complexity&amp;rdquo;, and &amp;ldquo;perspective&amp;rdquo; feel like dirty epithets in polite
(board)rooms (or indeed, most rooms). And heaven forfend if you&amp;rsquo;re an engineer
given to worrying about such stuff. (Engineers can actually verify their
Enterprise F-word Factor real quick. Use those words in your next executive
meeting, and closely watch superior eyes. If they light up, count your lucky
stars.)&lt;/p>
&lt;p>Yet people know deep down, that such things really exist, that they matter,
that we are part of the equation. But even if everyone cares, where is the
time or incentive to ferret out their presence in our organisations, much less
map out and observe their mechanics? We&amp;rsquo;re so focused and &lt;em>busy&lt;/em> pushing the
numbers that denote scaling for us.&lt;/p>
&lt;p>Fortunately, people have an intuitive feel for the aggregate effect of their
scaling efforts.&lt;/p>
&lt;p>This &amp;ldquo;effective scaling effect&amp;rdquo;, for lack of better words, is measurable in
gut-feels, and I bet, also as hard numbers in terms of &lt;strong>net resources expended&lt;/strong>
&lt;strong>to convert net inputs into net outputs&lt;/strong>. Such a &lt;em>lens of net effect&lt;/em> would
abstract over systems thinking mechanics of flows, feedback loops, buffers,
controls, and relationships.&lt;/p>
&lt;p>The following picture is not meant to capture system dynamics, but to think
about net effects of system dynamics&amp;hellip; a sort of contrast material to compare
one&amp;rsquo;s current trajectory.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text"> NET INPUTS NET RESOURCES CONSUMED NET OUTPUTS
+----------------------+ +----------------------+ +----------------------+
| . | | | | . |
| . | | | | . |
| . | | | | . |
| . | | | | . |
| . | | | | . |
| . | | | | . |
| . | | /----| | . |
SCALING |. . . | |____ /--------- | | . . . |
+----------------------+ +----------------------+ +----------------------+
+----------------------+ +----------------------+ +----------------------+
| | | | | |
| /--| | /--| | /--|
| /-- | | /-- | | /-- |
| /-- | | /-- | | /-- |
| /-- | | /-- | | /-- |
| /-- | | /-- | | /-- |
| /-- | | /-- | | /-- |
STASIS | /-- | | /-- | | /-- |
+----------------------+ +----------------------+ +----------------------+
+----------------------+ +----------------------+ +----------------------+
| | | . | | |
| /--| | . | | /--|
| /-- | | . | | /-- |
| /-- | | . | | /-- |
| /-- | | . | | /-- |
| /-- | | . | | /-- |
| /-- | | . | | /-- |
DEATH | /-- | |.. . | | /-- |
+----------------------+ +----------------------+ +----------------------+
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I worry for us, you know.&lt;/p>
&lt;p>In our great civilization-scale hustle, we&amp;rsquo;ve lost the greater (systemic)
perspective. Perspective crucial to the control and management of giant grizzly
bears of self-made complexity. Everything seems to be on fire at all scales,
but we all seem to feel&amp;hellip; fine.&lt;/p>
&lt;p>Maybe I just have a morbid eye. Please tell me I&amp;rsquo;m wrong.&lt;/p>
&lt;h2 id="example-what-s-cooler-than-10-bn-100-bn-dot">Example: What&amp;rsquo;s cooler than 10 Bn? 100 Bn.&lt;/h2>
&lt;p>The way tech startups function in India drives me to despair.&lt;/p>
&lt;p>I think founders and staff lose a tremendous amount of value to avoidable chaos,
needless complexity, excessive cargo-culting of tech and business ideas, severe
under-investment in human capacity-building, and quite frankly rather poor
attention to detail. One can very well count their true burn rate not in dollar
terms, but in minds wasted, and bodies spent.&lt;/p>
&lt;p>Operating in India is ridiculously hard as it is, and founders must struggle
forward through crazy marketplace/environmental complexities. I think those
other factors I stated previously compound to make things far worse that they
need to be. It&amp;rsquo;s like death by a thousand cuts.&lt;/p>
&lt;p>For example, people look at me funny when I say I think that the poster-child
sale of Flipkart to Walmart was a tragedy. To me, that was a $100 Bn company
(or bigger!) that didn&amp;rsquo;t happen. Anecdotally, I believe many similar tragedies
are in progress as we speak. Value erosion of a colossal scale. Maybe I&amp;rsquo;m
too much of an idealist? Or worse, maybe I&amp;rsquo;m too much of an engineer? What
could I &lt;em>possibly&lt;/em> know about things way above my pay grade?&lt;/p>
&lt;p>Unfortunately for me, I can&amp;rsquo;t help thinking there must be a better way.&lt;/p>
&lt;h2 id="tying-it-together-dot-trying-it-together">Tying it together. Trying it together?&lt;/h2>
&lt;p>Software &lt;em>is&lt;/em> extreme leverage.&lt;/p>
&lt;p>Transmuting real-world idioms and processes into bits and API calls is literally
game-changing. This we know to be true to experience.&lt;/p>
&lt;p>However, any enormously high-leverage intervention routinely produces every
conceivable externality, positive or negative or just&amp;hellip; alien. So often,
we don&amp;rsquo;t even know what we&amp;rsquo;re really looking at. &lt;em>New&lt;/em>. &lt;em>NFT&lt;/em>. &lt;em>WTF&lt;/em>. &lt;em>Wow&lt;/em>.
That&amp;rsquo;s what you get when a model in a computer can thumb its nose at the laws
of Physics. Crazy variance of outcome. Power law inversions of control away
from the world of brick and mortar and atoms and societies into power-centers
capable of planet-scale rearrangement.&lt;/p>
&lt;p>People don&amp;rsquo;t scale, systems do.&lt;/p>
&lt;p>Scaling begets complexity. Systems create leverage. Systems-oriented people
create ways to thrive in complex worlds. Organisations that invest deeply in
systems-oriented people have a shot at greatness at scale. Those that don&amp;rsquo;t,
risk unchecked destruction of value for self and ecosystem. It&amp;rsquo;s a muscle to
build. It takes persistent work. You need the stomach for it.&lt;/p>
&lt;p>Unfortunately, you will likely build a bureaucracy.&lt;/p>
&lt;p>And build it fast. Actually, you don&amp;rsquo;t even need to &amp;ldquo;build&amp;rdquo; one, you just have
to do nothing and let it manifest itself. Easy-peasy.&lt;/p>
&lt;p>Suppose you suddenly learn that you are now a founder hustlin' a red-hot tech
startup, and suddenly find yourself in possession of gobs of money, and honestly
not much leadership experience, you may very quickly also find yourself in
possession of small armies of people. The pressure to &amp;ldquo;grow&amp;rdquo; will be immense.
So will be the weight of responsibility. You may feel trapped, your only recourse
being to open wide and swallow as much as you can as fast as you can. You will
make the cardinal mistake of adding more people to your already late launch.
And when it&amp;rsquo;s all threatening to go sideways, you will discover your inner
Great Dictator.&lt;/p>
&lt;p>It will be tempting. You feel the hurt, but you also feel the power. You tell
yourself it will somehow all work out in the end. That growth will forgive all
sins. It won&amp;rsquo;t. Resist the urge to command and control. Resist becoming a Vogon.
Resist the slippery slope to the hell of pathological bureaucracies. Strive
to be a Slartibartfast. A creative, generative leader.&lt;/p>
&lt;p>&lt;em>&amp;ldquo;Power over rules is real power.&amp;quot;&lt;/em>&lt;/p>
&lt;p>&lt;em>&amp;ldquo;If you want to understand the deepest malfunctions of systems, pay attention
to the rules and to who has power over them.&amp;quot;&lt;/em> - Donella Meadows, Thinking in
Systems.&lt;/p>
&lt;p>We are all monkeys, remember? You may be the top dog, but I be you watch your
authority figures. Just as your people watch you. What are you absorbing?
What are you disseminating?&lt;/p>
&lt;p>You are also &lt;em>in&lt;/em> the system. You are bound by its laws, even if you created
it. Especially if you created it. But if you created it, you may have power
to change the rules. You may even have the greatest power; the power to
set/reset its goals.&lt;/p>
&lt;p>How will you wield your power?&lt;/p>
&lt;h2 id="food-for-thought">Food for thought&lt;/h2>
&lt;p>&lt;strong>Practice.&lt;/strong> Or, applied systems thinking.&lt;/p>
&lt;ul>
&lt;li>Forgsen, Humble, Kim: &lt;a href="https://www.goodreads.com/en/book/show/35747076-accelerate">Accelerate: Building and Scaling High-Performing Technology Organizations&lt;/a>&lt;/li>
&lt;li>Donella Meadows: &lt;a href="https://www.chelseagreen.com/product/thinking-in-systems/">Thinking in Systems&lt;/a>&lt;/li>
&lt;li>Marianne Belotti: &lt;a href="https://www.youtube.com/watch?v=XoEfV0kXXDY">We Killed These Things With Fire&lt;/a>&lt;/li>
&lt;li>John Allspaw: &lt;a href="https://www.youtube.com/watch?v=xA5U85LSk0M&amp;amp;t=0s">How Your Systems Keep Running Day After Day&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Perspective.&lt;/strong> Or, 80 IQ points.&lt;/p>
&lt;ul>
&lt;li>Joe Armstrong:
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=ed7A7r6DBsM">The How and Why of Fitting Things Together&lt;/a>, and&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=lKXe3HUG2l4">The Mess We&amp;rsquo;re In&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Alan Kay:
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=YyIQKBzIuBY">Programming and Scaling&lt;/a>, and&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=oKg1hTOQXoY">The Computer Revolution hasn&amp;rsquo;t happened yet&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Zeitgeist.&lt;/strong>: Or, stories from now.&lt;/p>
&lt;ul>
&lt;li>Dan Luu:
&lt;ul>
&lt;li>&lt;a href="https://danluu.com/people-matter/">Individuals Matter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danluu.com/culture/">Culture Matters&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danluu.com/wat/">Normalization of Deviance&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Tiger Global: &amp;ldquo;&lt;a href="https://www.readthegeneralist.com/briefing/tiger-global">value in the software asset class [was] mispriced&lt;/a>&amp;rdquo;
(i.e. &amp;ldquo;You&amp;rsquo;re still thinking too small&amp;rdquo;)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Satire.&lt;/strong> Or, a mirror to the culture.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Yes%5FMinister">Yes Minister&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/The%5FOffice">The Office&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Blackadder">Blackadder&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/A%5FBit%5Fof%5FFry%5F%26%5FLaurie">A Bit of Fry and Laurie&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/The%5FGreat%5FDictator">The Great Dictator&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="acknowledgments">Acknowledgments&lt;/h2>
&lt;p>Thanks to Julia and Radhika for writing feedback.&lt;/p></content></item></channel></rss>